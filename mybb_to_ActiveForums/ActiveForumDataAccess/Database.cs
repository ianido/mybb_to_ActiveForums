



















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `ActiveForums`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Server=MIASAWST03;Database=asp_Portal;User ID=sb;password=**zapped**;`
//     Schema:                 ``
//     Include Views:          `False`


using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace DataAccess
{
	public partial class afDB : Database
	{
		public afDB() 
			: base("ActiveForums")
		{
			CommonConstruct();
		}

		public afDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			afDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static afDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new afDB();
        }

		[ThreadStatic] static afDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static afDB repo { get { return afDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
		}
	}
	


	[TableName("am_CoreMessaging_UserPreferences")]


		

										[PrimaryKey("UserPreferenceId")]
									
		
		[ExplicitColumns]
    public partial class am_CoreMessaging_UserPreference : afDB.Record<am_CoreMessaging_UserPreference>  
    {
		[Column] public int UserPreferenceId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int UserId { get; set; }
		[Column] public int MessagesEmailFrequency { get; set; }
		[Column] public int NotificationsEmailFrequency { get; set; }
	}

	[TableName("am_SearchIndexer")]


		

										[PrimaryKey("SearchIndexerID")]
									
		
		[ExplicitColumns]
    public partial class am_SearchIndexer : afDB.Record<am_SearchIndexer>  
    {
		[Column] public int SearchIndexerID { get; set; }
		[Column] public string SearchIndexerAssemblyQualifiedName { get; set; }
	}

	[TableName("am_grmRepositoryAttributeValues")]


		

										[PrimaryKey("ItemID")]
									
		
		[ExplicitColumns]
    public partial class am_grmRepositoryAttributeValue : afDB.Record<am_grmRepositoryAttributeValue>  
    {
		[Column] public int ItemID { get; set; }
		[Column] public int? AttributeID { get; set; }
		[Column] public string ValueName { get; set; }
	}

	[TableName("am_activeforums_Security")]


		

										[PrimaryKey("ID")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Security : afDB.Record<am_activeforums_Security>  
    {
		[Column] public int SecuredId { get; set; }
		[Column] public int ObjectId { get; set; }
		[Column] public string ObjectName { get; set; }
		[Column] public int? SecureAction { get; set; }
		[Column] public int ObjectType { get; set; }
		[Column] public int SecureType { get; set; }
		[Column] public bool View { get; set; }
		[Column] public bool Read { get; set; }
		[Column] public bool Create { get; set; }
		[Column] public bool Reply { get; set; }
		[Column] public bool Edit { get; set; }
		[Column("Delete")] public bool _Delete { get; set; }
		[Column] public bool Lock { get; set; }
		[Column] public bool Pin { get; set; }
		[Column] public bool Attach { get; set; }
		[Column] public bool Poll { get; set; }
		[Column] public bool Block { get; set; }
		[Column] public bool Trust { get; set; }
		[Column] public bool Subscribe { get; set; }
		[Column] public bool Announce { get; set; }
		[Column] public bool ModApprove { get; set; }
		[Column] public bool ModMove { get; set; }
		[Column] public bool ModSplit { get; set; }
		[Column] public bool ModDelete { get; set; }
		[Column] public bool ModUser { get; set; }
		[Column] public bool ModEdit { get; set; }
		[Column] public bool ModLock { get; set; }
		[Column] public bool ModPin { get; set; }
		[Column] public string SecurityKey { get; set; }
		[Column] public int ID { get; set; }
	}

	[TableName("am_Authentication")]


		

										[PrimaryKey("AuthenticationID")]
									
		
		[ExplicitColumns]
    public partial class am_Authentication : afDB.Record<am_Authentication>  
    {
		[Column] public int AuthenticationID { get; set; }
		[Column] public int PackageID { get; set; }
		[Column] public string AuthenticationType { get; set; }
		[Column] public bool IsEnabled { get; set; }
		[Column] public string SettingsControlSrc { get; set; }
		[Column] public string LoginControlSrc { get; set; }
		[Column] public string LogoffControlSrc { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_grmRepositoryAttributes")]


		

										[PrimaryKey("ItemID")]
									
		
		[ExplicitColumns]
    public partial class am_grmRepositoryAttribute : afDB.Record<am_grmRepositoryAttribute>  
    {
		[Column] public int ItemID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public string AttributeName { get; set; }
	}

	[TableName("am_CoreMessaging_MessageAttachments")]


		

										[PrimaryKey("MessageAttachmentID")]
									
		
		[ExplicitColumns]
    public partial class am_CoreMessaging_MessageAttachment : afDB.Record<am_CoreMessaging_MessageAttachment>  
    {
		[Column] public int MessageAttachmentID { get; set; }
		[Column] public int MessageID { get; set; }
		[Column] public int? FileID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_TabModuleSettings")]


	
		[PrimaryKey("TabModuleID,SettingName")]

		
		[ExplicitColumns]
    public partial class am_TabModuleSetting : afDB.Record<am_TabModuleSetting>  
    {
		[Column] public int TabModuleID { get; set; }
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_CoreMessaging_SubscriptionTypes")]


		

										[PrimaryKey("SubscriptionTypeId")]
									
		
		[ExplicitColumns]
    public partial class am_CoreMessaging_SubscriptionType : afDB.Record<am_CoreMessaging_SubscriptionType>  
    {
		[Column] public int SubscriptionTypeId { get; set; }
		[Column] public string SubscriptionName { get; set; }
		[Column] public string FriendlyName { get; set; }
		[Column] public int? DesktopModuleId { get; set; }
	}

	[TableName("am_EventsRecurMaster")]


		

										[PrimaryKey("RecurMasterID")]
									
		
		[ExplicitColumns]
    public partial class am_EventsRecurMaster : afDB.Record<am_EventsRecurMaster>  
    {
		[Column] public int RecurMasterID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public string RRULE { get; set; }
		[Column] public DateTime DTSTART { get; set; }
		[Column] public string Duration { get; set; }
		[Column] public DateTime Until { get; set; }
		[Column] public string EventName { get; set; }
		[Column] public string EventDesc { get; set; }
		[Column] public int Importance { get; set; }
		[Column] public string Reminder { get; set; }
		[Column] public string Notify { get; set; }
		[Column] public bool Approved { get; set; }
		[Column] public bool Signups { get; set; }
		[Column] public int MaxEnrollment { get; set; }
		[Column] public int? EnrollRoleID { get; set; }
		[Column] public decimal EnrollFee { get; set; }
		[Column] public string EnrollType { get; set; }
		[Column] public string PayPalAccount { get; set; }
		[Column] public string ImageURL { get; set; }
		[Column] public string ImageType { get; set; }
		[Column] public int? ImageWidth { get; set; }
		[Column] public int? ImageHeight { get; set; }
		[Column] public bool ImageDisplay { get; set; }
		[Column] public int? Location { get; set; }
		[Column] public int? Category { get; set; }
		[Column] public bool SendReminder { get; set; }
		[Column] public int ReminderTime { get; set; }
		[Column] public string ReminderTimeMeasurement { get; set; }
		[Column] public string ReminderFrom { get; set; }
		[Column] public string CustomField1 { get; set; }
		[Column] public string CustomField2 { get; set; }
		[Column] public bool EnrollListView { get; set; }
		[Column] public bool DisplayEndDate { get; set; }
		[Column] public bool AllDayEvent { get; set; }
		[Column] public int OwnerID { get; set; }
		[Column] public string CultureName { get; set; }
		[Column] public int CreatedByID { get; set; }
		[Column] public DateTime CreatedDate { get; set; }
		[Column] public int UpdatedByID { get; set; }
		[Column] public DateTime UpdatedDate { get; set; }
		[Column] public bool DetailPage { get; set; }
		[Column] public string DetailURL { get; set; }
		[Column] public bool DetailNewWin { get; set; }
		[Column] public string EventTimeZoneId { get; set; }
		[Column] public bool AllowAnonEnroll { get; set; }
		[Column] public int? ContentItemId { get; set; }
		[Column] public int? SocialGroupId { get; set; }
		[Column] public int? SocialUserId { get; set; }
		[Column] public string Summary { get; set; }
		[Column] public int Sequence { get; set; }
	}

	[TableName("am_Journal_Security")]


		

										[PrimaryKey("JournalSecurityId")]
									
		
		[ExplicitColumns]
    public partial class am_Journal_Security : afDB.Record<am_Journal_Security>  
    {
		[Column] public int JournalSecurityId { get; set; }
		[Column] public int JournalId { get; set; }
		[Column] public string SecurityKey { get; set; }
	}

	[TableName("am_CoreMessaging_Subscriptions")]


		

										[PrimaryKey("SubscriptionId")]
									
		
		[ExplicitColumns]
    public partial class am_CoreMessaging_Subscription : afDB.Record<am_CoreMessaging_Subscription>  
    {
		[Column] public int SubscriptionId { get; set; }
		[Column] public int UserId { get; set; }
		[Column] public int? PortalId { get; set; }
		[Column] public int SubscriptionTypeId { get; set; }
		[Column] public string ObjectKey { get; set; }
		[Column] public string ObjectData { get; set; }
		[Column] public string Description { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int? ModuleId { get; set; }
		[Column] public int? TabId { get; set; }
	}

	[TableName("am_CoreMessaging_Messages")]


		

										[PrimaryKey("MessageID")]
									
		
		[ExplicitColumns]
    public partial class am_CoreMessaging_Message : afDB.Record<am_CoreMessaging_Message>  
    {
		[Column] public int MessageID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public int? NotificationTypeID { get; set; }
		[Column] public string To { get; set; }
		[Column] public string From { get; set; }
		[Column] public string Subject { get; set; }
		[Column] public string Body { get; set; }
		[Column] public int? ConversationID { get; set; }
		[Column] public bool? ReplyAllAllowed { get; set; }
		[Column] public int? SenderUserID { get; set; }
		[Column] public DateTime? ExpirationDate { get; set; }
		[Column] public string Context { get; set; }
		[Column] public bool? IncludeDismissAction { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("aspnet_Membership")]


		

										[PrimaryKey("UserId", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class aspnet_Membership : afDB.Record<aspnet_Membership>  
    {
		[Column] public Guid ApplicationId { get; set; }
		[Column] public Guid UserId { get; set; }
		[Column] public string Password { get; set; }
		[Column] public int PasswordFormat { get; set; }
		[Column] public string PasswordSalt { get; set; }
		[Column] public string MobilePIN { get; set; }
		[Column] public string Email { get; set; }
		[Column] public string LoweredEmail { get; set; }
		[Column] public string PasswordQuestion { get; set; }
		[Column] public string PasswordAnswer { get; set; }
		[Column] public bool IsApproved { get; set; }
		[Column] public bool IsLockedOut { get; set; }
		[Column] public DateTime CreateDate { get; set; }
		[Column] public DateTime LastLoginDate { get; set; }
		[Column] public DateTime LastPasswordChangedDate { get; set; }
		[Column] public DateTime LastLockoutDate { get; set; }
		[Column] public int FailedPasswordAttemptCount { get; set; }
		[Column] public DateTime FailedPasswordAttemptWindowStart { get; set; }
		[Column] public int FailedPasswordAnswerAttemptCount { get; set; }
		[Column] public DateTime FailedPasswordAnswerAttemptWindowStart { get; set; }
		[Column] public string Comment { get; set; }
	}

	[TableName("am_Relationships")]


		

										[PrimaryKey("RelationshipID")]
									
		
		[ExplicitColumns]
    public partial class am_Relationship : afDB.Record<am_Relationship>  
    {
		[Column] public int RelationshipID { get; set; }
		[Column] public int RelationshipTypeID { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string Description { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public int? UserID { get; set; }
		[Column] public int DefaultResponse { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_Journal_Data")]


		

										[PrimaryKey("JournalDataId")]
									
		
		[ExplicitColumns]
    public partial class am_Journal_Datum : afDB.Record<am_Journal_Datum>  
    {
		[Column] public int JournalDataId { get; set; }
		[Column] public int JournalId { get; set; }
		[Column] public string JournalXML { get; set; }
	}

	[TableName("am_EventsCategory")]


		

										[PrimaryKey("Category")]
									
		
		[ExplicitColumns]
    public partial class am_EventsCategory : afDB.Record<am_EventsCategory>  
    {
		[Column] public int PortalID { get; set; }
		[Column] public int Category { get; set; }
		[Column] public string CategoryName { get; set; }
		[Column] public string Color { get; set; }
		[Column] public string FontColor { get; set; }
	}

	[TableName("am_CoreMessaging_MessageRecipients")]


		

										[PrimaryKey("RecipientID")]
									
		
		[ExplicitColumns]
    public partial class am_CoreMessaging_MessageRecipient : afDB.Record<am_CoreMessaging_MessageRecipient>  
    {
		[Column] public int RecipientID { get; set; }
		[Column] public int MessageID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public bool Read { get; set; }
		[Column] public bool Archived { get; set; }
		[Column] public bool EmailSent { get; set; }
		[Column] public DateTime? EmailSentDate { get; set; }
		[Column] public Guid? EmailSchedulerInstance { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public bool SendToast { get; set; }
	}

	[TableName("am_Journal")]


		

										[PrimaryKey("JournalId")]
									
		
		[ExplicitColumns]
    public partial class am_Journal : afDB.Record<am_Journal>  
    {
		[Column] public int JournalId { get; set; }
		[Column] public int JournalTypeId { get; set; }
		[Column] public int? UserId { get; set; }
		[Column] public DateTime? DateCreated { get; set; }
		[Column] public DateTime? DateUpdated { get; set; }
		[Column] public int? PortalId { get; set; }
		[Column] public int ProfileId { get; set; }
		[Column] public int GroupId { get; set; }
		[Column] public string Title { get; set; }
		[Column] public string Summary { get; set; }
		[Column] public string ItemData { get; set; }
		[Column] public string ImageURL { get; set; }
		[Column] public string ObjectKey { get; set; }
		[Column] public Guid? AccessKey { get; set; }
		[Column] public int? ContentItemId { get; set; }
		[Column] public bool IsDeleted { get; set; }
		[Column] public bool CommentsDisabled { get; set; }
		[Column] public bool CommentsHidden { get; set; }
	}

	[TableName("am_EventsLocation")]


		

										[PrimaryKey("Location")]
									
		
		[ExplicitColumns]
    public partial class am_EventsLocation : afDB.Record<am_EventsLocation>  
    {
		[Column] public int PortalID { get; set; }
		[Column] public int Location { get; set; }
		[Column] public string LocationName { get; set; }
		[Column] public string MapURL { get; set; }
		[Column] public string Street { get; set; }
		[Column] public string PostalCode { get; set; }
		[Column] public string City { get; set; }
		[Column] public string Region { get; set; }
		[Column] public string Country { get; set; }
	}

	[TableName("am_PortalAlias")]


		

										[PrimaryKey("PortalAliasID")]
									
		
		[ExplicitColumns]
    public partial class am_PortalAlias : afDB.Record<am_PortalAlias>  
    {
		[Column] public int PortalAliasID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public string HTTPAlias { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public string BrowserType { get; set; }
		[Column] public string Skin { get; set; }
		[Column] public string CultureCode { get; set; }
		[Column] public bool IsPrimary { get; set; }
	}

	[TableName("am_TabSettings")]


	
		[PrimaryKey("TabID,SettingName")]

		
		[ExplicitColumns]
    public partial class am_TabSetting : afDB.Record<am_TabSetting>  
    {
		[Column] public int TabID { get; set; }
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_EventsMaster")]


		

										[PrimaryKey("MasterID")]
									
		
		[ExplicitColumns]
    public partial class am_EventsMaster : afDB.Record<am_EventsMaster>  
    {
		[Column] public int MasterID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public int SubEventID { get; set; }
	}

	[TableName("am_ContentTypes")]


		

										[PrimaryKey("ContentTypeID")]
									
		
		[ExplicitColumns]
    public partial class am_ContentType : afDB.Record<am_ContentType>  
    {
		[Column] public int ContentTypeID { get; set; }
		[Column] public string ContentType { get; set; }
	}

	[TableName("am_Exceptions")]


		

										[PrimaryKey("ExceptionHash", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class am_Exception : afDB.Record<am_Exception>  
    {
		[Column] public string ExceptionHash { get; set; }
		[Column] public string Message { get; set; }
		[Column] public string StackTrace { get; set; }
		[Column] public string InnerMessage { get; set; }
		[Column] public string InnerStackTrace { get; set; }
		[Column] public string Source { get; set; }
	}

	[TableName("am_Skins")]


		

										[PrimaryKey("SkinID")]
									
		
		[ExplicitColumns]
    public partial class am_Skin : afDB.Record<am_Skin>  
    {
		[Column] public int SkinID { get; set; }
		[Column] public int SkinPackageID { get; set; }
		[Column] public string SkinSrc { get; set; }
	}

	[TableName("am_Journal_Comments")]


		

										[PrimaryKey("CommentId")]
									
		
		[ExplicitColumns]
    public partial class am_Journal_Comment : afDB.Record<am_Journal_Comment>  
    {
		[Column] public int CommentId { get; set; }
		[Column] public int JournalId { get; set; }
		[Column] public int UserId { get; set; }
		[Column] public string Comment { get; set; }
		[Column] public DateTime DateCreated { get; set; }
		[Column] public DateTime DateUpdated { get; set; }
		[Column] public string CommentXML { get; set; }
	}

	[TableName("am_WebServers")]


		

										[PrimaryKey("ServerID")]
									
		
		[ExplicitColumns]
    public partial class am_WebServer : afDB.Record<am_WebServer>  
    {
		[Column] public int ServerID { get; set; }
		[Column] public string ServerName { get; set; }
		[Column] public DateTime CreatedDate { get; set; }
		[Column] public DateTime LastActivityDate { get; set; }
		[Column] public string URL { get; set; }
		[Column] public string IISAppName { get; set; }
		[Column] public bool Enabled { get; set; }
		[Column] public string ServerGroup { get; set; }
		[Column] public string UniqueId { get; set; }
		[Column] public int PingFailureCount { get; set; }
	}

	[TableName("am_Classification")]


		

										[PrimaryKey("ClassificationId")]
									
		
		[ExplicitColumns]
    public partial class am_Classification : afDB.Record<am_Classification>  
    {
		[Column] public int ClassificationId { get; set; }
		[Column] public string ClassificationName { get; set; }
		[Column] public int? ParentId { get; set; }
	}

	[TableName("am_Taxonomy_Vocabularies")]


		

										[PrimaryKey("VocabularyID")]
									
		
		[ExplicitColumns]
    public partial class am_Taxonomy_Vocabulary : afDB.Record<am_Taxonomy_Vocabulary>  
    {
		[Column] public int VocabularyID { get; set; }
		[Column] public int VocabularyTypeID { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string Description { get; set; }
		[Column] public int Weight { get; set; }
		[Column] public int? ScopeID { get; set; }
		[Column] public int ScopeTypeID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public bool IsSystem { get; set; }
	}

	[TableName("am_SkinPackages")]


		

										[PrimaryKey("SkinPackageID")]
									
		
		[ExplicitColumns]
    public partial class am_SkinPackage : afDB.Record<am_SkinPackage>  
    {
		[Column] public int SkinPackageID { get; set; }
		[Column] public int PackageID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string SkinName { get; set; }
		[Column] public string SkinType { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_ExceptionEvents")]


		

										[PrimaryKey("LogEventID", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class am_ExceptionEvent : afDB.Record<am_ExceptionEvent>  
    {
		[Column] public long LogEventID { get; set; }
		[Column] public string AssemblyVersion { get; set; }
		[Column] public int? PortalId { get; set; }
		[Column] public int? UserId { get; set; }
		[Column] public int? TabId { get; set; }
		[Column] public string RawUrl { get; set; }
		[Column] public string Referrer { get; set; }
		[Column] public string UserAgent { get; set; }
	}

	[TableName("am_EventsSubscription")]


		

										[PrimaryKey("SubscriptionID")]
									
		
		[ExplicitColumns]
    public partial class am_EventsSubscription : afDB.Record<am_EventsSubscription>  
    {
		[Column] public int SubscriptionID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public int UserID { get; set; }
	}

	[TableName("am_ScheduleHistory")]


		

										[PrimaryKey("ScheduleHistoryID")]
									
		
		[ExplicitColumns]
    public partial class am_ScheduleHistory : afDB.Record<am_ScheduleHistory>  
    {
		[Column] public int ScheduleHistoryID { get; set; }
		[Column] public int ScheduleID { get; set; }
		[Column] public DateTime StartDate { get; set; }
		[Column] public DateTime? EndDate { get; set; }
		[Column] public bool? Succeeded { get; set; }
		[Column] public string LogNotes { get; set; }
		[Column] public DateTime? NextStart { get; set; }
		[Column] public string Server { get; set; }
	}

	[TableName("am_Banners")]


		

										[PrimaryKey("BannerId")]
									
		
		[ExplicitColumns]
    public partial class am_Banner : afDB.Record<am_Banner>  
    {
		[Column] public int BannerId { get; set; }
		[Column] public int VendorId { get; set; }
		[Column] public string ImageFile { get; set; }
		[Column] public string BannerName { get; set; }
		[Column] public int Impressions { get; set; }
		[Column] public double CPM { get; set; }
		[Column] public int Views { get; set; }
		[Column] public int ClickThroughs { get; set; }
		[Column] public DateTime? StartDate { get; set; }
		[Column] public DateTime? EndDate { get; set; }
		[Column] public string CreatedByUser { get; set; }
		[Column] public DateTime CreatedDate { get; set; }
		[Column] public int? BannerTypeId { get; set; }
		[Column] public string Description { get; set; }
		[Column] public string GroupName { get; set; }
		[Column] public bool Criteria { get; set; }
		[Column] public string URL { get; set; }
		[Column] public int Width { get; set; }
		[Column] public int Height { get; set; }
	}

	[TableName("am_ContentItems")]


		

										[PrimaryKey("ContentItemID")]
									
		
		[ExplicitColumns]
    public partial class am_ContentItem : afDB.Record<am_ContentItem>  
    {
		[Column] public int ContentItemID { get; set; }
		[Column] public string Content { get; set; }
		[Column] public int ContentTypeID { get; set; }
		[Column] public int TabID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public string ContentKey { get; set; }
		[Column] public bool Indexed { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public int? StateID { get; set; }
	}

	[TableName("am_SiteLog")]


		

										[PrimaryKey("SiteLogId")]
									
		
		[ExplicitColumns]
    public partial class am_SiteLog : afDB.Record<am_SiteLog>  
    {
		[Column] public int SiteLogId { get; set; }
		[Column] public DateTime DateTime { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int? UserId { get; set; }
		[Column] public string Referrer { get; set; }
		[Column] public string Url { get; set; }
		[Column] public string UserAgent { get; set; }
		[Column] public string UserHostAddress { get; set; }
		[Column] public string UserHostName { get; set; }
		[Column] public int? TabId { get; set; }
		[Column] public int? AffiliateId { get; set; }
	}

	[TableName("am_CoreMessaging_NotificationTypes")]


		

										[PrimaryKey("NotificationTypeID")]
									
		
		[ExplicitColumns]
    public partial class am_CoreMessaging_NotificationType : afDB.Record<am_CoreMessaging_NotificationType>  
    {
		[Column] public int NotificationTypeID { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string Description { get; set; }
		[Column] public int? TTL { get; set; }
		[Column] public int? DesktopModuleID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public bool IsTask { get; set; }
	}

	[TableName("am_SQLQueries")]


		

										[PrimaryKey("QueryId")]
									
		
		[ExplicitColumns]
    public partial class am_SQLQuery : afDB.Record<am_SQLQuery>  
    {
		[Column] public int QueryId { get; set; }
		[Column] public string Name { get; set; }
		[Column("Query")] public string _Query { get; set; }
		[Column] public string ConnectionStringName { get; set; }
		[Column] public int CreatedByUserId { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserId { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_LanguagePacks")]


		

										[PrimaryKey("LanguagePackID")]
									
		
		[ExplicitColumns]
    public partial class am_LanguagePack : afDB.Record<am_LanguagePack>  
    {
		[Column] public int LanguagePackID { get; set; }
		[Column] public int PackageID { get; set; }
		[Column] public int DependentPackageID { get; set; }
		[Column] public int LanguageID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_Packages")]


		

										[PrimaryKey("PackageID")]
									
		
		[ExplicitColumns]
    public partial class am_Package : afDB.Record<am_Package>  
    {
		[Column] public int PackageID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string FriendlyName { get; set; }
		[Column] public string Description { get; set; }
		[Column] public string PackageType { get; set; }
		[Column] public string Version { get; set; }
		[Column] public string License { get; set; }
		[Column] public string Manifest { get; set; }
		[Column] public string Owner { get; set; }
		[Column] public string Organization { get; set; }
		[Column] public string Url { get; set; }
		[Column] public string Email { get; set; }
		[Column] public string ReleaseNotes { get; set; }
		[Column] public bool IsSystemPackage { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public string FolderName { get; set; }
		[Column] public string IconFile { get; set; }
	}

	[TableName("am_ContentWorkflows")]


		

										[PrimaryKey("WorkflowID")]
									
		
		[ExplicitColumns]
    public partial class am_ContentWorkflow : afDB.Record<am_ContentWorkflow>  
    {
		[Column] public int WorkflowID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string WorkflowName { get; set; }
		[Column] public string Description { get; set; }
		[Column] public bool IsDeleted { get; set; }
		[Column] public bool StartAfterCreating { get; set; }
		[Column] public bool StartAfterEditing { get; set; }
		[Column] public bool DispositionEnabled { get; set; }
		[Column] public bool IsSystem { get; set; }
		[Column] public string WorkflowKey { get; set; }
	}

	[TableName("am_activeforums_Settings")]


		[ExplicitColumns]
    public partial class am_activeforums_Setting : afDB.Record<am_activeforums_Setting>  
    {
		[Column] public int ModuleId { get; set; }
		[Column] public string GroupKey { get; set; }
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
	}

	[TableName("am_Journal_Types")]


		

										[PrimaryKey("JournalTypeId", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class am_Journal_Type : afDB.Record<am_Journal_Type>  
    {
		[Column] public int JournalTypeId { get; set; }
		[Column] public string JournalType { get; set; }
		[Column] public string icon { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public bool IsEnabled { get; set; }
		[Column] public bool AppliesToProfile { get; set; }
		[Column] public bool AppliesToGroup { get; set; }
		[Column] public bool AppliesToStream { get; set; }
		[Column] public string Options { get; set; }
		[Column] public bool SupportsNotify { get; set; }
		[Column] public bool EnableComments { get; set; }
	}

	[TableName("am_activeforums_Subscriptions")]


		

										[PrimaryKey("Id")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Subscription : afDB.Record<am_activeforums_Subscription>  
    {
		[Column] public int Id { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public int ForumId { get; set; }
		[Column] public int TopicId { get; set; }
		[Column] public int Mode { get; set; }
		[Column] public int UserId { get; set; }
	}

	[TableName("am_Mobile_PreviewProfiles")]


		

										[PrimaryKey("Id")]
									
		
		[ExplicitColumns]
    public partial class am_Mobile_PreviewProfile : afDB.Record<am_Mobile_PreviewProfile>  
    {
		[Column] public int Id { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public string Name { get; set; }
		[Column] public int Width { get; set; }
		[Column] public int Height { get; set; }
		[Column] public string UserAgent { get; set; }
		[Column] public int SortOrder { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_Assemblies")]


		

										[PrimaryKey("AssemblyID")]
									
		
		[ExplicitColumns]
    public partial class am_Assembly : afDB.Record<am_Assembly>  
    {
		[Column] public int AssemblyID { get; set; }
		[Column] public int? PackageID { get; set; }
		[Column] public string AssemblyName { get; set; }
		[Column] public string Version { get; set; }
	}

	[TableName("am_ContentWorkflowStates")]


		

										[PrimaryKey("StateID")]
									
		
		[ExplicitColumns]
    public partial class am_ContentWorkflowState : afDB.Record<am_ContentWorkflowState>  
    {
		[Column] public int StateID { get; set; }
		[Column] public int WorkflowID { get; set; }
		[Column] public string StateName { get; set; }
		[Column] public int Order { get; set; }
		[Column] public bool IsActive { get; set; }
		[Column] public bool SendEmail { get; set; }
		[Column] public bool SendMessage { get; set; }
		[Column] public bool IsDisposalState { get; set; }
		[Column] public string OnCompleteMessageSubject { get; set; }
		[Column] public string OnCompleteMessageBody { get; set; }
		[Column] public string OnDiscardMessageSubject { get; set; }
		[Column] public string OnDiscardMessageBody { get; set; }
		[Column] public bool IsSystem { get; set; }
		[Column] public bool SendNotification { get; set; }
		[Column] public bool SendNotificationToAdministrators { get; set; }
	}

	[TableName("am_EventLog")]


		

										[PrimaryKey("LogEventID")]
									
		
		[ExplicitColumns]
    public partial class am_EventLog : afDB.Record<am_EventLog>  
    {
		[Column] public string LogGUID { get; set; }
		[Column] public string LogTypeKey { get; set; }
		[Column] public int? LogConfigID { get; set; }
		[Column] public int? LogUserID { get; set; }
		[Column] public string LogUserName { get; set; }
		[Column] public int? LogPortalID { get; set; }
		[Column] public string LogPortalName { get; set; }
		[Column] public DateTime LogCreateDate { get; set; }
		[Column] public string LogServerName { get; set; }
		[Column] public string LogProperties { get; set; }
		[Column] public bool? LogNotificationPending { get; set; }
		[Column] public long LogEventID { get; set; }
		[Column] public string ExceptionHash { get; set; }
	}

	[TableName("am_SurveyOptions")]


		

										[PrimaryKey("SurveyOptionID")]
									
		
		[ExplicitColumns]
    public partial class am_SurveyOption : afDB.Record<am_SurveyOption>  
    {
		[Column] public int SurveyOptionID { get; set; }
		[Column] public int SurveyID { get; set; }
		[Column] public int ViewOrder { get; set; }
		[Column] public string OptionName { get; set; }
		[Column] public int Votes { get; set; }
		[Column] public bool IsCorrect { get; set; }
	}

	[TableName("am_ModuleSettings")]


	
		[PrimaryKey("ModuleID,SettingName")]

		
		[ExplicitColumns]
    public partial class am_ModuleSetting : afDB.Record<am_ModuleSetting>  
    {
		[Column] public int ModuleID { get; set; }
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_Surveys")]


		

										[PrimaryKey("SurveyID")]
									
		
		[ExplicitColumns]
    public partial class am_Survey : afDB.Record<am_Survey>  
    {
		[Column] public int SurveyID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public string Question { get; set; }
		[Column] public int? ViewOrder { get; set; }
		[Column] public string OptionType { get; set; }
		[Column] public DateTime CreatedDate { get; set; }
		[Column] public int CreatedByUser { get; set; }
	}

	[TableName("am_activeforums_Topics_Related")]


		

										[PrimaryKey("RelationId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Topics_Related : afDB.Record<am_activeforums_Topics_Related>  
    {
		[Column] public int RelationId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public int SourceTopicId { get; set; }
		[Column] public int RelatedTopicId { get; set; }
		[Column] public bool IsTwoWay { get; set; }
		[Column] public DateTime DateCreated { get; set; }
		[Column] public int CreatedBy { get; set; }
	}

	[TableName("am_Version")]


		

										[PrimaryKey("VersionId")]
									
		
		[ExplicitColumns]
    public partial class am_Version : afDB.Record<am_Version>  
    {
		[Column] public int VersionId { get; set; }
		[Column] public int Major { get; set; }
		[Column] public int Minor { get; set; }
		[Column] public int Build { get; set; }
		[Column] public string Name { get; set; }
		[Column] public DateTime CreatedDate { get; set; }
	}

	[TableName("am_activeforums_Tags")]


		

										[PrimaryKey("TagId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Tag : afDB.Record<am_activeforums_Tag>  
    {
		[Column] public int TagId { get; set; }
		[Column] public int Portalid { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public string TagName { get; set; }
		[Column] public int Clicks { get; set; }
		[Column] public int Items { get; set; }
		[Column] public int Priority { get; set; }
		[Column] public bool IsCategory { get; set; }
		[Column] public int ForumId { get; set; }
		[Column] public int ForumGroupId { get; set; }
	}

	[TableName("am_Tabs")]


		

										[PrimaryKey("TabID")]
									
		
		[ExplicitColumns]
    public partial class am_Tab : afDB.Record<am_Tab>  
    {
		[Column] public int TabID { get; set; }
		[Column] public int TabOrder { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string TabName { get; set; }
		[Column] public bool IsVisible { get; set; }
		[Column] public int? ParentId { get; set; }
		[Column] public string IconFile { get; set; }
		[Column] public bool DisableLink { get; set; }
		[Column] public string Title { get; set; }
		[Column] public string Description { get; set; }
		[Column] public string KeyWords { get; set; }
		[Column] public bool IsDeleted { get; set; }
		[Column] public string Url { get; set; }
		[Column] public string SkinSrc { get; set; }
		[Column] public string ContainerSrc { get; set; }
		[Column] public DateTime? StartDate { get; set; }
		[Column] public DateTime? EndDate { get; set; }
		[Column] public int? RefreshInterval { get; set; }
		[Column] public string PageHeadText { get; set; }
		[Column] public bool IsSecure { get; set; }
		[Column] public bool PermanentRedirect { get; set; }
		[Column] public double SiteMapPriority { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public string IconFileLarge { get; set; }
		[Column] public string CultureCode { get; set; }
		[Column] public int? ContentItemID { get; set; }
		[Column] public Guid UniqueId { get; set; }
		[Column] public Guid VersionGuid { get; set; }
		[Column] public Guid? DefaultLanguageGuid { get; set; }
		[Column] public Guid LocalizedVersionGuid { get; set; }
		[Column] public int Level { get; set; }
		[Column] public string TabPath { get; set; }
		[Column] public bool HasBeenPublished { get; set; }
		[Column] public bool IsSystem { get; set; }
	}

	[TableName("am_Events")]


		

										[PrimaryKey("EventID")]
									
		
		[ExplicitColumns]
    public partial class am_Event : afDB.Record<am_Event>  
    {
		[Column] public int EventID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public DateTime? EventDateBegin { get; set; }
		[Column] public DateTime? EventDateEnd { get; set; }
		[Column] public DateTime EventTimeBegin { get; set; }
		[Column] public int Duration { get; set; }
		[Column] public string EventName { get; set; }
		[Column] public string EventDesc { get; set; }
		[Column] public int Importance { get; set; }
		[Column] public string RepeatType { get; set; }
		[Column] public string Every { get; set; }
		[Column] public string Period { get; set; }
		[Column] public string Reminder { get; set; }
		[Column] public string Notify { get; set; }
		[Column] public int CreatedByID { get; set; }
		[Column] public bool Approved { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public bool Signups { get; set; }
		[Column] public int MaxEnrollment { get; set; }
		[Column] public int? EnrollRoleID { get; set; }
		[Column] public decimal EnrollFee { get; set; }
		[Column] public string EnrollType { get; set; }
		[Column] public string PayPalAccount { get; set; }
		[Column] public bool Cancelled { get; set; }
		[Column] public string ImageURL { get; set; }
		[Column] public string ImageType { get; set; }
		[Column] public int? ImageWidth { get; set; }
		[Column] public int? ImageHeight { get; set; }
		[Column] public bool ImageDisplay { get; set; }
		[Column] public int? Location { get; set; }
		[Column] public int? Category { get; set; }
		[Column] public bool SendReminder { get; set; }
		[Column] public int ReminderTime { get; set; }
		[Column] public string ReminderTimeMeasurement { get; set; }
		[Column] public string ReminderFrom { get; set; }
		[Column] public bool SearchSubmitted { get; set; }
		[Column] public string CustomField1 { get; set; }
		[Column] public string CustomField2 { get; set; }
		[Column] public DateTime LastUpdatedAt { get; set; }
		[Column] public DateTime OriginalDateBegin { get; set; }
		[Column] public int LastUpdatedID { get; set; }
		[Column] public int OwnerID { get; set; }
		[Column] public bool EnrollListView { get; set; }
		[Column] public bool NewEventEmailSent { get; set; }
		[Column] public bool DisplayEndDate { get; set; }
		[Column] public bool AllDayEvent { get; set; }
		[Column] public int RecurMasterID { get; set; }
		[Column] public bool DetailPage { get; set; }
		[Column] public string DetailURL { get; set; }
		[Column] public bool DetailNewWin { get; set; }
		[Column] public DateTime CreatedDate { get; set; }
		[Column] public bool AllowAnonEnroll { get; set; }
		[Column] public int? ContentItemId { get; set; }
		[Column] public bool JournalItem { get; set; }
		[Column] public string Summary { get; set; }
		[Column] public int Sequence { get; set; }
	}

	[TableName("am_activeforums_Queue")]


		

										[PrimaryKey("Id")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Queue : afDB.Record<am_activeforums_Queue>  
    {
		[Column] public int Id { get; set; }
		[Column] public string EmailFrom { get; set; }
		[Column] public string EmailTo { get; set; }
		[Column] public string EmailSubject { get; set; }
		[Column] public string EmailBody { get; set; }
		[Column] public string EmailBodyPlainText { get; set; }
		[Column] public string EmailCC { get; set; }
		[Column] public string EmailBCC { get; set; }
		[Column] public DateTime DateCreated { get; set; }
	}

	[TableName("am_ContentWorkflowLogs")]


		

										[PrimaryKey("WorkflowLogID")]
									
		
		[ExplicitColumns]
    public partial class am_ContentWorkflowLog : afDB.Record<am_ContentWorkflowLog>  
    {
		[Column] public int WorkflowLogID { get; set; }
		[Column] public string Action { get; set; }
		[Column] public string Comment { get; set; }
		[Column] public DateTime Date { get; set; }
		[Column] public int User { get; set; }
		[Column] public int WorkflowID { get; set; }
		[Column] public int ContentItemID { get; set; }
		[Column] public int Type { get; set; }
	}

	[TableName("am_activeforums_URL")]


		

										[PrimaryKey("Id")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_URL : afDB.Record<am_activeforums_URL>  
    {
		[Column] public int Id { get; set; }
		[Column] public string URL { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int ForumId { get; set; }
		[Column] public int TopicId { get; set; }
		[Column] public int? ForumGroupId { get; set; }
	}

	[TableName("am_grmRepositoryObjectCategories")]


		[ExplicitColumns]
    public partial class am_grmRepositoryObjectCategory : afDB.Record<am_grmRepositoryObjectCategory>  
    {
		[Column] public int ItemID { get; set; }
		[Column] public int? ObjectID { get; set; }
		[Column] public int? CategoryID { get; set; }
	}

	[TableName("am_RoleSettings")]


		

										[PrimaryKey("RoleSettingID")]
									
		
		[ExplicitColumns]
    public partial class am_RoleSetting : afDB.Record<am_RoleSetting>  
    {
		[Column] public int RoleSettingID { get; set; }
		[Column] public int RoleID { get; set; }
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_UserAuthentication")]


		

										[PrimaryKey("UserAuthenticationID")]
									
		
		[ExplicitColumns]
    public partial class am_UserAuthentication : afDB.Record<am_UserAuthentication>  
    {
		[Column] public int UserAuthenticationID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public string AuthenticationType { get; set; }
		[Column] public string AuthenticationToken { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_grmRepositoryObjectValues")]


		

										[PrimaryKey("ItemID")]
									
		
		[ExplicitColumns]
    public partial class am_grmRepositoryObjectValue : afDB.Record<am_grmRepositoryObjectValue>  
    {
		[Column] public int ItemID { get; set; }
		[Column] public int? ObjectID { get; set; }
		[Column] public int? ValueID { get; set; }
	}

	[TableName("am_Permission")]


		

										[PrimaryKey("PermissionID")]
									
		
		[ExplicitColumns]
    public partial class am_Permission : afDB.Record<am_Permission>  
    {
		[Column] public int PermissionID { get; set; }
		[Column] public string PermissionCode { get; set; }
		[Column] public int ModuleDefID { get; set; }
		[Column] public string PermissionKey { get; set; }
		[Column] public string PermissionName { get; set; }
		[Column] public int ViewOrder { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_MetaData")]


		

										[PrimaryKey("MetaDataID")]
									
		
		[ExplicitColumns]
    public partial class am_MetaDatum : afDB.Record<am_MetaDatum>  
    {
		[Column] public int MetaDataID { get; set; }
		[Column] public string MetaDataName { get; set; }
		[Column] public string MetaDataDescription { get; set; }
	}

	[TableName("am_CoreMessaging_NotificationTypeActions")]


		

										[PrimaryKey("NotificationTypeActionID")]
									
		
		[ExplicitColumns]
    public partial class am_CoreMessaging_NotificationTypeAction : afDB.Record<am_CoreMessaging_NotificationTypeAction>  
    {
		[Column] public int NotificationTypeActionID { get; set; }
		[Column] public int NotificationTypeID { get; set; }
		[Column] public string NameResourceKey { get; set; }
		[Column] public string DescriptionResourceKey { get; set; }
		[Column] public string ConfirmResourceKey { get; set; }
		[Column] public int Order { get; set; }
		[Column] public string APICall { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_activeforums_Properties")]


		

										[PrimaryKey("PropertyId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Property : afDB.Record<am_activeforums_Property>  
    {
		[Column] public int PropertyId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int ObjectType { get; set; }
		[Column] public int ObjectOwnerId { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string DataType { get; set; }
		[Column] public int DefaultAccessControl { get; set; }
		[Column] public bool IsHidden { get; set; }
		[Column] public bool IsRequired { get; set; }
		[Column] public bool IsReadOnly { get; set; }
		[Column] public string ValidationExpression { get; set; }
		[Column] public string EditTemplate { get; set; }
		[Column] public string ViewTemplate { get; set; }
		[Column] public int SortOrder { get; set; }
		[Column] public string DefaultValue { get; set; }
	}

	[TableName("am_ContentWorkflowStatePermission")]


		

										[PrimaryKey("WorkflowStatePermissionID")]
									
		
		[ExplicitColumns]
    public partial class am_ContentWorkflowStatePermission : afDB.Record<am_ContentWorkflowStatePermission>  
    {
		[Column] public int WorkflowStatePermissionID { get; set; }
		[Column] public int StateID { get; set; }
		[Column] public int PermissionID { get; set; }
		[Column] public bool AllowAccess { get; set; }
		[Column] public int? RoleID { get; set; }
		[Column] public int? UserID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_activeforums_Templates")]


		

										[PrimaryKey("TemplateId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Template : afDB.Record<am_activeforums_Template>  
    {
		[Column] public int TemplateId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public int TemplateType { get; set; }
		[Column] public bool IsSystem { get; set; }
		[Column] public string Title { get; set; }
		[Column] public string Subject { get; set; }
		[Column] public string Template { get; set; }
		[Column] public DateTime DateCreated { get; set; }
		[Column] public DateTime? DateUpdated { get; set; }
	}

	[TableName("am_Journal_TypeFilters")]


		

										[PrimaryKey("JournalTypeFilterId")]
									
		
		[ExplicitColumns]
    public partial class am_Journal_TypeFilter : afDB.Record<am_Journal_TypeFilter>  
    {
		[Column] public int JournalTypeFilterId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public int JournalTypeId { get; set; }
	}

	[TableName("am_ContentItems_MetaData")]


		

										[PrimaryKey("ContentItemMetaDataID")]
									
		
		[ExplicitColumns]
    public partial class am_ContentItems_MetaDatum : afDB.Record<am_ContentItems_MetaDatum>  
    {
		[Column] public int ContentItemMetaDataID { get; set; }
		[Column] public int ContentItemID { get; set; }
		[Column] public int MetaDataID { get; set; }
		[Column] public string MetaDataValue { get; set; }
	}

	[TableName("am_EventsNotification")]


		

										[PrimaryKey("NotificationID")]
									
		
		[ExplicitColumns]
    public partial class am_EventsNotification : afDB.Record<am_EventsNotification>  
    {
		[Column] public int NotificationID { get; set; }
		[Column] public int EventID { get; set; }
		[Column] public int PortalAliasID { get; set; }
		[Column] public string UserEmail { get; set; }
		[Column] public bool NotificationSent { get; set; }
		[Column] public DateTime NotifyByDateTime { get; set; }
		[Column] public DateTime EventTimeBegin { get; set; }
		[Column] public string NotifyLanguage { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public int TabID { get; set; }
	}

	[TableName("am_EventLogTypes")]


		

										[PrimaryKey("LogTypeKey", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class am_EventLogType : afDB.Record<am_EventLogType>  
    {
		[Column] public string LogTypeKey { get; set; }
		[Column] public string LogTypeFriendlyName { get; set; }
		[Column] public string LogTypeDescription { get; set; }
		[Column] public string LogTypeOwner { get; set; }
		[Column] public string LogTypeCSSClass { get; set; }
	}

	[TableName("am_DesktopModulePermission")]


		

										[PrimaryKey("DesktopModulePermissionID")]
									
		
		[ExplicitColumns]
    public partial class am_DesktopModulePermission : afDB.Record<am_DesktopModulePermission>  
    {
		[Column] public int DesktopModulePermissionID { get; set; }
		[Column] public int PortalDesktopModuleID { get; set; }
		[Column] public int PermissionID { get; set; }
		[Column] public bool AllowAccess { get; set; }
		[Column] public int? RoleID { get; set; }
		[Column] public int? UserID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_Mobile_Redirections")]


		

										[PrimaryKey("Id")]
									
		
		[ExplicitColumns]
    public partial class am_Mobile_Redirection : afDB.Record<am_Mobile_Redirection>  
    {
		[Column] public int Id { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public string Name { get; set; }
		[Column] public int Type { get; set; }
		[Column] public int SortOrder { get; set; }
		[Column] public int SourceTabId { get; set; }
		[Column] public bool IncludeChildTabs { get; set; }
		[Column] public int TargetType { get; set; }
		[Column] public string TargetValue { get; set; }
		[Column] public bool Enabled { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_ContentWorkflowSources")]


		

										[PrimaryKey("SourceID")]
									
		
		[ExplicitColumns]
    public partial class am_ContentWorkflowSource : afDB.Record<am_ContentWorkflowSource>  
    {
		[Column] public int SourceID { get; set; }
		[Column] public int WorkflowID { get; set; }
		[Column] public string SourceName { get; set; }
		[Column] public string SourceType { get; set; }
	}

	[TableName("am_UserDefinedFieldSettings")]


	
		[PrimaryKey("FieldId,SettingName")]

		
		[ExplicitColumns]
    public partial class am_UserDefinedFieldSetting : afDB.Record<am_UserDefinedFieldSetting>  
    {
		[Column] public int FieldId { get; set; }
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
	}

	[TableName("am_HtmlText")]


		

										[PrimaryKey("ItemID")]
									
		
		[ExplicitColumns]
    public partial class am_HtmlText : afDB.Record<am_HtmlText>  
    {
		[Column] public int ModuleID { get; set; }
		[Column] public int ItemID { get; set; }
		[Column] public string Content { get; set; }
		[Column] public int? Version { get; set; }
		[Column] public int? StateID { get; set; }
		[Column] public bool? IsPublished { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public string Summary { get; set; }
	}

	[TableName("am_EventsSignups")]


		

										[PrimaryKey("SignupID")]
									
		
		[ExplicitColumns]
    public partial class am_EventsSignup : afDB.Record<am_EventsSignup>  
    {
		[Column] public int SignupID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public int EventID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public bool Approved { get; set; }
		[Column] public string PayPalStatus { get; set; }
		[Column] public string PayPalReason { get; set; }
		[Column] public string PayPalTransID { get; set; }
		[Column] public string PayPalPayerID { get; set; }
		[Column] public string PayPalPayerStatus { get; set; }
		[Column] public string PayPalRecieverEmail { get; set; }
		[Column] public string PayPalUserEmail { get; set; }
		[Column] public string PayPalPayerEmail { get; set; }
		[Column] public string PayPalFirstName { get; set; }
		[Column] public string PayPalLastName { get; set; }
		[Column] public string PayPalAddress { get; set; }
		[Column] public string PayPalCity { get; set; }
		[Column] public string PayPalState { get; set; }
		[Column] public string PayPalZip { get; set; }
		[Column] public string PayPalCountry { get; set; }
		[Column] public string PayPalCurrency { get; set; }
		[Column] public DateTime? PayPalPaymentDate { get; set; }
		[Column] public decimal? PayPalAmount { get; set; }
		[Column] public decimal? PayPalFee { get; set; }
		[Column] public int NoEnrolees { get; set; }
		[Column] public DateTime CreateDate { get; set; }
		[Column] public string AnonEmail { get; set; }
		[Column] public string AnonName { get; set; }
		[Column] public string AnonTelephone { get; set; }
		[Column] public string AnonCulture { get; set; }
		[Column] public string AnonTimeZoneId { get; set; }
		[Column] public string FirstName { get; set; }
		[Column] public string LastName { get; set; }
		[Column] public string Company { get; set; }
		[Column] public string JobTitle { get; set; }
		[Column] public string ReferenceNumber { get; set; }
		[Column] public string Street { get; set; }
		[Column] public string PostalCode { get; set; }
		[Column] public string City { get; set; }
		[Column] public string Region { get; set; }
		[Column] public string Country { get; set; }
	}

	[TableName("am_UrlLog")]


		

										[PrimaryKey("UrlLogID")]
									
		
		[ExplicitColumns]
    public partial class am_UrlLog : afDB.Record<am_UrlLog>  
    {
		[Column] public int UrlLogID { get; set; }
		[Column] public int UrlTrackingID { get; set; }
		[Column] public DateTime ClickDate { get; set; }
		[Column] public int? UserID { get; set; }
	}

	[TableName("am_activeforums_Topics")]


		

										[PrimaryKey("TopicId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Topic : afDB.Record<am_activeforums_Topic>  
    {
		[Column] public int TopicId { get; set; }
		[Column] public int ContentId { get; set; }
		[Column] public int ViewCount { get; set; }
		[Column] public int ReplyCount { get; set; }
		[Column] public bool IsLocked { get; set; }
		[Column] public bool IsPinned { get; set; }
		[Column] public string TopicIcon { get; set; }
		[Column] public int StatusId { get; set; }
		[Column] public bool IsApproved { get; set; }
		[Column] public bool IsRejected { get; set; }
		[Column] public bool IsDeleted { get; set; }
		[Column] public bool IsAnnounce { get; set; }
		[Column] public bool IsArchived { get; set; }
		[Column] public DateTime? AnnounceStart { get; set; }
		[Column] public DateTime? AnnounceEnd { get; set; }
		[Column] public int TopicType { get; set; }
		[Column] public int Priority { get; set; }
		[Column] public string URL { get; set; }
		[Column] public string TopicData { get; set; }
		[Column] public int? NextTopic { get; set; }
		[Column] public int? PrevTopic { get; set; }
	}

	[TableName("am_Dashboard_Controls")]


		

										[PrimaryKey("DashboardControlID")]
									
		
		[ExplicitColumns]
    public partial class am_Dashboard_Control : afDB.Record<am_Dashboard_Control>  
    {
		[Column] public int DashboardControlID { get; set; }
		[Column] public string DashboardControlKey { get; set; }
		[Column] public bool IsEnabled { get; set; }
		[Column] public string DashboardControlSrc { get; set; }
		[Column] public string DashboardControlLocalResources { get; set; }
		[Column] public string ControllerClass { get; set; }
		[Column] public int ViewOrder { get; set; }
		[Column] public int PackageID { get; set; }
	}

	[TableName("am_Portals")]


		

										[PrimaryKey("PortalID")]
									
		
		[ExplicitColumns]
    public partial class am_Portal : afDB.Record<am_Portal>  
    {
		[Column] public int PortalID { get; set; }
		[Column] public DateTime? ExpiryDate { get; set; }
		[Column] public int UserRegistration { get; set; }
		[Column] public int BannerAdvertising { get; set; }
		[Column] public int? AdministratorId { get; set; }
		[Column] public string Currency { get; set; }
		[Column] public decimal HostFee { get; set; }
		[Column] public int HostSpace { get; set; }
		[Column] public int? AdministratorRoleId { get; set; }
		[Column] public int? RegisteredRoleId { get; set; }
		[Column] public Guid GUID { get; set; }
		[Column] public string PaymentProcessor { get; set; }
		[Column] public string ProcessorUserId { get; set; }
		[Column] public string ProcessorPassword { get; set; }
		[Column] public int? SiteLogHistory { get; set; }
		[Column] public string DefaultLanguage { get; set; }
		[Column] public int TimezoneOffset { get; set; }
		[Column] public string HomeDirectory { get; set; }
		[Column] public int PageQuota { get; set; }
		[Column] public int UserQuota { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public int? PortalGroupID { get; set; }
	}

	[TableName("am_Mobile_RedirectionRules")]


		

										[PrimaryKey("Id")]
									
		
		[ExplicitColumns]
    public partial class am_Mobile_RedirectionRule : afDB.Record<am_Mobile_RedirectionRule>  
    {
		[Column] public int Id { get; set; }
		[Column] public int RedirectionId { get; set; }
		[Column] public string Capability { get; set; }
		[Column] public string Expression { get; set; }
	}

	[TableName("am_UserRelationships")]


		

										[PrimaryKey("UserRelationshipID")]
									
		
		[ExplicitColumns]
    public partial class am_UserRelationship : afDB.Record<am_UserRelationship>  
    {
		[Column] public int UserRelationshipID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public int RelatedUserID { get; set; }
		[Column] public int RelationshipID { get; set; }
		[Column] public int Status { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_activeforums_Content_Attachments")]


	
		[PrimaryKey("ContentId,AttachId")]

		
		[ExplicitColumns]
    public partial class am_activeforums_Content_Attachment : afDB.Record<am_activeforums_Content_Attachment>  
    {
		[Column] public int ContentId { get; set; }
		[Column] public int AttachId { get; set; }
		[Column] public string FileURL { get; set; }
		[Column] public string FileName { get; set; }
		[Column] public int DisplayLink { get; set; }
		[Column] public string ContentType { get; set; }
	}

	[TableName("am_Schedule")]


		

										[PrimaryKey("ScheduleID")]
									
		
		[ExplicitColumns]
    public partial class am_Schedule : afDB.Record<am_Schedule>  
    {
		[Column] public int ScheduleID { get; set; }
		[Column] public string TypeFullName { get; set; }
		[Column] public int TimeLapse { get; set; }
		[Column] public string TimeLapseMeasurement { get; set; }
		[Column] public int RetryTimeLapse { get; set; }
		[Column] public string RetryTimeLapseMeasurement { get; set; }
		[Column] public int RetainHistoryNum { get; set; }
		[Column] public string AttachToEvent { get; set; }
		[Column] public bool CatchUpEnabled { get; set; }
		[Column] public bool Enabled { get; set; }
		[Column] public string ObjectDependencies { get; set; }
		[Column] public string Servers { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public string FriendlyName { get; set; }
		[Column] public DateTime? ScheduleStartDate { get; set; }
	}

	[TableName("am_EventsPPErrorLog")]


		

										[PrimaryKey("PayPalID")]
									
		
		[ExplicitColumns]
    public partial class am_EventsPPErrorLog : afDB.Record<am_EventsPPErrorLog>  
    {
		[Column] public int PayPalID { get; set; }
		[Column] public int SignupID { get; set; }
		[Column] public string PayPalStatus { get; set; }
		[Column] public string PayPalReason { get; set; }
		[Column] public string PayPalTransID { get; set; }
		[Column] public string PayPalPayerID { get; set; }
		[Column] public string PayPalPayerStatus { get; set; }
		[Column] public string PayPalRecieverEmail { get; set; }
		[Column] public string PayPalUserEmail { get; set; }
		[Column] public string PayPalPayerEmail { get; set; }
		[Column] public string PayPalFirstName { get; set; }
		[Column] public string PayPalLastName { get; set; }
		[Column] public string PayPalAddress { get; set; }
		[Column] public string PayPalCity { get; set; }
		[Column] public string PayPalState { get; set; }
		[Column] public string PayPalZip { get; set; }
		[Column] public string PayPalCountry { get; set; }
		[Column] public string PayPalCurrency { get; set; }
		[Column] public DateTime? PayPalPaymentDate { get; set; }
		[Column] public decimal? PayPalAmount { get; set; }
		[Column] public decimal? PayPalFee { get; set; }
		[Column] public DateTime CreateDate { get; set; }
	}

	[TableName("am_Announcements")]


		

										[PrimaryKey("ItemID")]
									
		
		[ExplicitColumns]
    public partial class am_Announcement : afDB.Record<am_Announcement>  
    {
		[Column] public int ItemID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public DateTime? CreatedDate { get; set; }
		[Column] public string Title { get; set; }
		[Column] public string URL { get; set; }
		[Column] public DateTime? ExpireDate { get; set; }
		[Column] public string Description { get; set; }
		[Column] public int? ViewOrder { get; set; }
		[Column] public int CreatedByUser { get; set; }
		[Column] public DateTime? PublishDate { get; set; }
		[Column] public string ImageSource { get; set; }
	}

	[TableName("am_wns_inj_injection")]


		

										[PrimaryKey("injection_id")]
									
		
		[ExplicitColumns]
    public partial class am_wns_inj_injection : afDB.Record<am_wns_inj_injection>  
    {
		[Column] public int injection_id { get; set; }
		[Column] public int module_id { get; set; }
		[Column] public bool inject_top { get; set; }
		[Column] public string inject_name { get; set; }
		[Column] public string inject_content { get; set; }
		[Column] public int order_shown { get; set; }
		[Column] public bool is_enabled { get; set; }
	}

	[TableName("am_Messaging_Messages")]


		

										[PrimaryKey("MessageID")]
									
		
		[ExplicitColumns]
    public partial class am_Messaging_Message : afDB.Record<am_Messaging_Message>  
    {
		[Column] public long MessageID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public int FromUserID { get; set; }
		[Column] public string ToUserName { get; set; }
		[Column] public string FromUserName { get; set; }
		[Column] public int? ToUserID { get; set; }
		[Column] public int? ToRoleID { get; set; }
		[Column] public byte Status { get; set; }
		[Column] public string Subject { get; set; }
		[Column] public string Body { get; set; }
		[Column] public DateTime Date { get; set; }
		[Column] public Guid Conversation { get; set; }
		[Column] public long? ReplyTo { get; set; }
		[Column] public bool AllowReply { get; set; }
		[Column] public bool SkipPortal { get; set; }
		[Column] public bool EmailSent { get; set; }
		[Column] public DateTime? EmailSentDate { get; set; }
		[Column] public Guid? EmailSchedulerInstance { get; set; }
	}

	[TableName("am_Workflow")]


		

										[PrimaryKey("WorkflowID")]
									
		
		[ExplicitColumns]
    public partial class am_Workflow : afDB.Record<am_Workflow>  
    {
		[Column] public int WorkflowID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string WorkflowName { get; set; }
		[Column] public string Description { get; set; }
		[Column] public bool IsDeleted { get; set; }
	}

	[TableName("am_Profile")]


		

										[PrimaryKey("ProfileId")]
									
		
		[ExplicitColumns]
    public partial class am_Profile : afDB.Record<am_Profile>  
    {
		[Column] public int ProfileId { get; set; }
		[Column] public int UserId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public string ProfileData { get; set; }
		[Column] public DateTime CreatedDate { get; set; }
	}

	[TableName("am_WorkflowStates")]


		

										[PrimaryKey("StateID")]
									
		
		[ExplicitColumns]
    public partial class am_WorkflowState : afDB.Record<am_WorkflowState>  
    {
		[Column] public int StateID { get; set; }
		[Column] public int WorkflowID { get; set; }
		[Column] public string StateName { get; set; }
		[Column] public int Order { get; set; }
		[Column] public bool IsActive { get; set; }
		[Column] public bool Notify { get; set; }
	}

	[TableName("am_Taxonomy_Terms")]


		

										[PrimaryKey("TermID")]
									
		
		[ExplicitColumns]
    public partial class am_Taxonomy_Term : afDB.Record<am_Taxonomy_Term>  
    {
		[Column] public int TermID { get; set; }
		[Column] public int VocabularyID { get; set; }
		[Column] public int? ParentTermID { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string Description { get; set; }
		[Column] public int Weight { get; set; }
		[Column] public int TermLeft { get; set; }
		[Column] public int TermRight { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_SurveyResults")]


		

										[PrimaryKey("SurveyResultID")]
									
		
		[ExplicitColumns]
    public partial class am_SurveyResult : afDB.Record<am_SurveyResult>  
    {
		[Column] public int SurveyResultID { get; set; }
		[Column] public int SurveyOptionID { get; set; }
		[Column] public int UserID { get; set; }
	}

	[TableName("am_SkinControls")]


		

										[PrimaryKey("SkinControlID")]
									
		
		[ExplicitColumns]
    public partial class am_SkinControl : afDB.Record<am_SkinControl>  
    {
		[Column] public int SkinControlID { get; set; }
		[Column] public int PackageID { get; set; }
		[Column] public string ControlKey { get; set; }
		[Column] public string ControlSrc { get; set; }
		[Column] public string IconFile { get; set; }
		[Column] public string HelpUrl { get; set; }
		[Column] public bool SupportsPartialRendering { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_activeforums_Topics_Ratings")]


		

										[PrimaryKey("RatingID")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Topics_Rating : afDB.Record<am_activeforums_Topics_Rating>  
    {
		[Column] public int RatingID { get; set; }
		[Column] public int TopicId { get; set; }
		[Column] public int? UserID { get; set; }
		[Column] public int? Rating { get; set; }
		[Column] public bool? Helpful { get; set; }
		[Column] public string Comments { get; set; }
		[Column] public string IPAddress { get; set; }
		[Column] public DateTime DateAdded { get; set; }
		[Column] public DateTime DateUpdated { get; set; }
	}

	[TableName("am_PortalLanguages")]


		

										[PrimaryKey("PortalLanguageID")]
									
		
		[ExplicitColumns]
    public partial class am_PortalLanguage : afDB.Record<am_PortalLanguage>  
    {
		[Column] public int PortalLanguageID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public int LanguageID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public bool IsPublished { get; set; }
	}

	[TableName("am_HtmlTextLog")]


		

										[PrimaryKey("HtmlTextLogID")]
									
		
		[ExplicitColumns]
    public partial class am_HtmlTextLog : afDB.Record<am_HtmlTextLog>  
    {
		[Column] public int HtmlTextLogID { get; set; }
		[Column] public int ItemID { get; set; }
		[Column] public int StateID { get; set; }
		[Column] public string Comment { get; set; }
		[Column] public bool Approved { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
	}

	[TableName("am_PortalLocalization")]


	
		[PrimaryKey("PortalID,CultureCode")]

		
		[ExplicitColumns]
    public partial class am_PortalLocalization : afDB.Record<am_PortalLocalization>  
    {
		[Column] public int PortalID { get; set; }
		[Column] public string CultureCode { get; set; }
		[Column] public string PortalName { get; set; }
		[Column] public string LogoFile { get; set; }
		[Column] public string FooterText { get; set; }
		[Column] public string Description { get; set; }
		[Column] public string KeyWords { get; set; }
		[Column] public string BackgroundFile { get; set; }
		[Column] public int? HomeTabId { get; set; }
		[Column] public int? LoginTabId { get; set; }
		[Column] public int? UserTabId { get; set; }
		[Column] public int? AdminTabId { get; set; }
		[Column] public int? SplashTabId { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public int? RegisterTabId { get; set; }
		[Column] public int? SearchTabId { get; set; }
		[Column] public int? Custom404TabId { get; set; }
		[Column] public int? Custom500TabId { get; set; }
	}

	[TableName("am_ContentItems_Tags")]


		

										[PrimaryKey("ContentItemTagID")]
									
		
		[ExplicitColumns]
    public partial class am_ContentItems_Tag : afDB.Record<am_ContentItems_Tag>  
    {
		[Column] public int ContentItemTagID { get; set; }
		[Column] public int ContentItemID { get; set; }
		[Column] public int TermID { get; set; }
	}

	[TableName("am_HtmlTextUsers")]


		

										[PrimaryKey("HtmlTextUserID")]
									
		
		[ExplicitColumns]
    public partial class am_HtmlTextUser : afDB.Record<am_HtmlTextUser>  
    {
		[Column] public int HtmlTextUserID { get; set; }
		[Column] public int ItemID { get; set; }
		[Column] public int StateID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public int TabID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
	}

	[TableName("am_Journal_Access")]


		

										[PrimaryKey("JournalAccessId")]
									
		
		[ExplicitColumns]
    public partial class am_Journal_Access : afDB.Record<am_Journal_Access>  
    {
		[Column] public int JournalAccessId { get; set; }
		[Column] public int JournalTypeId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public string Name { get; set; }
		[Column] public Guid AccessKey { get; set; }
		[Column] public bool IsEnabled { get; set; }
		[Column] public DateTime DateCreated { get; set; }
	}

	[TableName("am_activeforums_Topics_Tags")]


	
		[PrimaryKey("TopicId,TagId")]

		
		[ExplicitColumns]
    public partial class am_activeforums_Topics_Tag : afDB.Record<am_activeforums_Topics_Tag>  
    {
		[Column] public int TopicId { get; set; }
		[Column] public int TagId { get; set; }
	}

	[TableName("am_FolderPermission")]


		

										[PrimaryKey("FolderPermissionID")]
									
		
		[ExplicitColumns]
    public partial class am_FolderPermission : afDB.Record<am_FolderPermission>  
    {
		[Column] public int FolderPermissionID { get; set; }
		[Column] public int FolderID { get; set; }
		[Column] public int PermissionID { get; set; }
		[Column] public bool AllowAccess { get; set; }
		[Column] public int? RoleID { get; set; }
		[Column] public int? UserID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_PortalDesktopModules")]


		

										[PrimaryKey("PortalDesktopModuleID")]
									
		
		[ExplicitColumns]
    public partial class am_PortalDesktopModule : afDB.Record<am_PortalDesktopModule>  
    {
		[Column] public int PortalDesktopModuleID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public int DesktopModuleID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_activeforums_Topics_Tracking")]


		

										[PrimaryKey("TrackingId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Topics_Tracking : afDB.Record<am_activeforums_Topics_Tracking>  
    {
		[Column] public int TrackingId { get; set; }
		[Column] public int? ForumId { get; set; }
		[Column] public int? TopicId { get; set; }
		[Column] public int LastReplyId { get; set; }
		[Column] public int? UserId { get; set; }
		[Column] public DateTime? DateAdded { get; set; }
	}

	[TableName("am_TabModules")]


		

										[PrimaryKey("TabModuleID")]
									
		
		[ExplicitColumns]
    public partial class am_TabModule : afDB.Record<am_TabModule>  
    {
		[Column] public int TabModuleID { get; set; }
		[Column] public int TabID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public string PaneName { get; set; }
		[Column] public int ModuleOrder { get; set; }
		[Column] public int CacheTime { get; set; }
		[Column] public string Alignment { get; set; }
		[Column] public string Color { get; set; }
		[Column] public string Border { get; set; }
		[Column] public string IconFile { get; set; }
		[Column] public int Visibility { get; set; }
		[Column] public string ContainerSrc { get; set; }
		[Column] public bool DisplayTitle { get; set; }
		[Column] public bool DisplayPrint { get; set; }
		[Column] public bool DisplaySyndicate { get; set; }
		[Column] public bool IsWebSlice { get; set; }
		[Column] public string WebSliceTitle { get; set; }
		[Column] public DateTime? WebSliceExpiryDate { get; set; }
		[Column] public int? WebSliceTTL { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public bool IsDeleted { get; set; }
		[Column] public string CacheMethod { get; set; }
		[Column] public string ModuleTitle { get; set; }
		[Column] public string Header { get; set; }
		[Column] public string Footer { get; set; }
		[Column] public string CultureCode { get; set; }
		[Column] public Guid UniqueId { get; set; }
		[Column] public Guid VersionGuid { get; set; }
		[Column] public Guid? DefaultLanguageGuid { get; set; }
		[Column] public Guid LocalizedVersionGuid { get; set; }
	}

	[TableName("am_DesktopModules")]


		

										[PrimaryKey("DesktopModuleID")]
									
		
		[ExplicitColumns]
    public partial class am_DesktopModule : afDB.Record<am_DesktopModule>  
    {
		[Column] public int DesktopModuleID { get; set; }
		[Column] public string FriendlyName { get; set; }
		[Column] public string Description { get; set; }
		[Column] public string Version { get; set; }
		[Column] public bool IsPremium { get; set; }
		[Column] public bool IsAdmin { get; set; }
		[Column] public string BusinessControllerClass { get; set; }
		[Column] public string FolderName { get; set; }
		[Column] public string ModuleName { get; set; }
		[Column] public int SupportedFeatures { get; set; }
		[Column] public string CompatibleVersions { get; set; }
		[Column] public string Dependencies { get; set; }
		[Column] public string Permissions { get; set; }
		[Column] public int PackageID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public int ContentItemId { get; set; }
		[Column] public int Shareable { get; set; }
	}

	[TableName("am_Affiliates")]


		

										[PrimaryKey("AffiliateId")]
									
		
		[ExplicitColumns]
    public partial class am_Affiliate : afDB.Record<am_Affiliate>  
    {
		[Column] public int AffiliateId { get; set; }
		[Column] public int? VendorId { get; set; }
		[Column] public DateTime? StartDate { get; set; }
		[Column] public DateTime? EndDate { get; set; }
		[Column] public double CPC { get; set; }
		[Column] public int Clicks { get; set; }
		[Column] public double CPA { get; set; }
		[Column] public int Acquisitions { get; set; }
	}

	[TableName("am_activeforums_UserProfiles")]


		

										[PrimaryKey("ProfileId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_UserProfile : afDB.Record<am_activeforums_UserProfile>  
    {
		[Column] public int ProfileId { get; set; }
		[Column] public int UserId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int TopicCount { get; set; }
		[Column] public int ReplyCount { get; set; }
		[Column] public int ViewCount { get; set; }
		[Column] public int AnswerCount { get; set; }
		[Column] public int RewardPoints { get; set; }
		[Column] public string UserCaption { get; set; }
		[Column] public DateTime DateCreated { get; set; }
		[Column] public DateTime? DateUpdated { get; set; }
		[Column] public DateTime? DateLastActivity { get; set; }
		[Column] public DateTime? DateLastPost { get; set; }
		[Column] public string Signature { get; set; }
		[Column] public bool SignatureDisabled { get; set; }
		[Column] public int TrustLevel { get; set; }
		[Column] public bool AdminWatch { get; set; }
		[Column] public bool AttachDisabled { get; set; }
		[Column] public string Avatar { get; set; }
		[Column] public int AvatarType { get; set; }
		[Column] public bool AvatarDisabled { get; set; }
		[Column] public string PrefDefaultSort { get; set; }
		[Column] public bool PrefDefaultShowReplies { get; set; }
		[Column] public bool PrefJumpLastPost { get; set; }
		[Column] public bool PrefTopicSubscribe { get; set; }
		[Column] public int PrefSubscriptionType { get; set; }
		[Column] public bool PrefUseAjax { get; set; }
		[Column] public int PrefEmailFormat { get; set; }
		[Column] public bool PrefBlockAvatars { get; set; }
		[Column] public bool PrefBlockSignatures { get; set; }
		[Column] public int PrefPageSize { get; set; }
		[Column] public string Yahoo { get; set; }
		[Column] public string MSN { get; set; }
		[Column] public string ICQ { get; set; }
		[Column] public string AOL { get; set; }
		[Column] public string Occupation { get; set; }
		[Column] public string Location { get; set; }
		[Column] public string Interests { get; set; }
		[Column] public string WebSite { get; set; }
		[Column] public string Badges { get; set; }
		[Column] public string Bio { get; set; }
	}

	[TableName("am_SearchTypes")]


		

										[PrimaryKey("SearchTypeId")]
									
		
		[ExplicitColumns]
    public partial class am_SearchType : afDB.Record<am_SearchType>  
    {
		[Column] public int SearchTypeId { get; set; }
		[Column] public string SearchTypeName { get; set; }
		[Column] public string SearchResultClass { get; set; }
		[Column] public bool? IsPrivate { get; set; }
	}

	[TableName("am_Lists")]


		

										[PrimaryKey("EntryID")]
									
		
		[ExplicitColumns]
    public partial class am_List : afDB.Record<am_List>  
    {
		[Column] public int EntryID { get; set; }
		[Column] public string ListName { get; set; }
		[Column] public string Value { get; set; }
		[Column] public string Text { get; set; }
		[Column] public int ParentID { get; set; }
		[Column] public int Level { get; set; }
		[Column] public int SortOrder { get; set; }
		[Column] public int DefinitionID { get; set; }
		[Column] public string Description { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public bool SystemList { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_SearchDeletedItems")]


		

										[PrimaryKey("SearchDeletedItemsID")]
									
		
		[ExplicitColumns]
    public partial class am_SearchDeletedItem : afDB.Record<am_SearchDeletedItem>  
    {
		[Column] public int SearchDeletedItemsID { get; set; }
		[Column] public DateTime DateCreated { get; set; }
		[Column] public string Document { get; set; }
	}

	[TableName("am_grmRepositoryCategories")]


		

										[PrimaryKey("ItemId")]
									
		
		[ExplicitColumns]
    public partial class am_grmRepositoryCategory : afDB.Record<am_grmRepositoryCategory>  
    {
		[Column] public int ItemId { get; set; }
		[Column] public int? ModuleId { get; set; }
		[Column] public string Category { get; set; }
		[Column] public int? ViewOrder { get; set; }
		[Column] public int? Parent { get; set; }
	}

	[TableName("am_SystemMessages")]


		

										[PrimaryKey("MessageID")]
									
		
		[ExplicitColumns]
    public partial class am_SystemMessage : afDB.Record<am_SystemMessage>  
    {
		[Column] public int MessageID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string MessageName { get; set; }
		[Column] public string MessageValue { get; set; }
	}

	[TableName("am_grmRepositoryComments")]


		

										[PrimaryKey("ItemID")]
									
		
		[ExplicitColumns]
    public partial class am_grmRepositoryComment : afDB.Record<am_grmRepositoryComment>  
    {
		[Column] public int ItemID { get; set; }
		[Column] public int ObjectID { get; set; }
		[Column] public string CreatedByUser { get; set; }
		[Column] public DateTime? CreatedDate { get; set; }
		[Column] public string Comment { get; set; }
	}

	[TableName("am_UserRelationshipPreferences")]


	
		[PrimaryKey("PreferenceID,RelationshipID")]

		
		[ExplicitColumns]
    public partial class am_UserRelationshipPreference : afDB.Record<am_UserRelationshipPreference>  
    {
		[Column] public int PreferenceID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public int RelationshipID { get; set; }
		[Column] public int DefaultResponse { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_grmRepositoryObjects")]


		

										[PrimaryKey("ItemID")]
									
		
		[ExplicitColumns]
    public partial class am_grmRepositoryObject : afDB.Record<am_grmRepositoryObject>  
    {
		[Column] public int ItemID { get; set; }
		[Column] public int? ModuleID { get; set; }
		[Column] public string CreatedByUser { get; set; }
		[Column] public DateTime? CreatedDate { get; set; }
		[Column] public string UpdatedByUser { get; set; }
		[Column] public DateTime? UpdatedDate { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string Author { get; set; }
		[Column] public string AuthorEmail { get; set; }
		[Column] public string FileSize { get; set; }
		[Column] public int? Downloads { get; set; }
		[Column] public string PreviewImage { get; set; }
		[Column] public string Image { get; set; }
		[Column] public string FileName { get; set; }
		[Column] public int? Clicks { get; set; }
		[Column] public long? RatingVotes { get; set; }
		[Column] public long? RatingTotal { get; set; }
		[Column] public double? RatingAverage { get; set; }
		[Column] public int? Approved { get; set; }
		[Column] public int? ShowEMail { get; set; }
		[Column] public string Summary { get; set; }
		[Column] public string Description { get; set; }
		[Column] public string SecurityRoles { get; set; }
	}

	[TableName("am_Modules")]


		

										[PrimaryKey("ModuleID")]
									
		
		[ExplicitColumns]
    public partial class am_Module : afDB.Record<am_Module>  
    {
		[Column] public int ModuleID { get; set; }
		[Column] public int ModuleDefID { get; set; }
		[Column] public bool AllTabs { get; set; }
		[Column] public bool IsDeleted { get; set; }
		[Column] public bool? InheritViewPermissions { get; set; }
		[Column] public DateTime? StartDate { get; set; }
		[Column] public DateTime? EndDate { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public DateTime? LastContentModifiedOnDate { get; set; }
		[Column] public int? ContentItemID { get; set; }
		[Column] public bool IsShareable { get; set; }
		[Column] public bool IsShareableViewOnly { get; set; }
	}

	[TableName("am_ModuleControls")]


		

										[PrimaryKey("ModuleControlID")]
									
		
		[ExplicitColumns]
    public partial class am_ModuleControl : afDB.Record<am_ModuleControl>  
    {
		[Column] public int ModuleControlID { get; set; }
		[Column] public int? ModuleDefID { get; set; }
		[Column] public string ControlKey { get; set; }
		[Column] public string ControlTitle { get; set; }
		[Column] public string ControlSrc { get; set; }
		[Column] public string IconFile { get; set; }
		[Column] public int ControlType { get; set; }
		[Column] public int? ViewOrder { get; set; }
		[Column] public string HelpUrl { get; set; }
		[Column] public bool SupportsPartialRendering { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public bool SupportsPopUps { get; set; }
	}

	[TableName("am_UserDefinedRows")]


		

										[PrimaryKey("UserDefinedRowId")]
									
		
		[ExplicitColumns]
    public partial class am_UserDefinedRow : afDB.Record<am_UserDefinedRow>  
    {
		[Column] public int UserDefinedRowId { get; set; }
		[Column] public int ModuleId { get; set; }
	}

	[TableName("am_Languages")]


		

										[PrimaryKey("LanguageID")]
									
		
		[ExplicitColumns]
    public partial class am_Language : afDB.Record<am_Language>  
    {
		[Column] public int LanguageID { get; set; }
		[Column] public string CultureCode { get; set; }
		[Column] public string CultureName { get; set; }
		[Column] public string FallbackCulture { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_FolderMappingsSettings")]


	
		[PrimaryKey("FolderMappingID,SettingName")]

		
		[ExplicitColumns]
    public partial class am_FolderMappingsSetting : afDB.Record<am_FolderMappingsSetting>  
    {
		[Column] public int FolderMappingID { get; set; }
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_UserDefinedFields")]


		

										[PrimaryKey("UserDefinedFieldId")]
									
		
		[ExplicitColumns]
    public partial class am_UserDefinedField : afDB.Record<am_UserDefinedField>  
    {
		[Column] public int UserDefinedFieldId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public string FieldTitle { get; set; }
		[Column] public bool Visible { get; set; }
		[Column] public int FieldOrder { get; set; }
		[Column] public string FieldType { get; set; }
		[Column] public bool Required { get; set; }
		[Column] public string Default { get; set; }
		[Column] public string OutputSettings { get; set; }
		[Column] public string InputSettings { get; set; }
		[Column] public string ValidationRule { get; set; }
		[Column] public string ValidationMessage { get; set; }
		[Column] public bool NormalizeFlag { get; set; }
		[Column] public string HelpText { get; set; }
		[Column] public bool Searchable { get; set; }
		[Column] public bool ShowOnEdit { get; set; }
		[Column] public bool PrivateField { get; set; }
		[Column] public string EditStyle { get; set; }
		[Column] public bool MultipleValues { get; set; }
	}

	[TableName("am_ModulePermission")]


		

										[PrimaryKey("ModulePermissionID")]
									
		
		[ExplicitColumns]
    public partial class am_ModulePermission : afDB.Record<am_ModulePermission>  
    {
		[Column] public int ModulePermissionID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public int PermissionID { get; set; }
		[Column] public bool AllowAccess { get; set; }
		[Column] public int? RoleID { get; set; }
		[Column] public int? UserID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public int PortalID { get; set; }
	}

	[TableName("am_EventLogConfig")]


		

										[PrimaryKey("ID")]
									
		
		[ExplicitColumns]
    public partial class am_EventLogConfig : afDB.Record<am_EventLogConfig>  
    {
		[Column] public int ID { get; set; }
		[Column] public string LogTypeKey { get; set; }
		[Column] public int? LogTypePortalID { get; set; }
		[Column] public bool LoggingIsActive { get; set; }
		[Column] public int KeepMostRecent { get; set; }
		[Column] public bool EmailNotificationIsActive { get; set; }
		[Column] public int? NotificationThreshold { get; set; }
		[Column] public int? NotificationThresholdTime { get; set; }
		[Column] public int? NotificationThresholdTimeType { get; set; }
		[Column] public string MailFromAddress { get; set; }
		[Column] public string MailToAddress { get; set; }
	}

	[TableName("am_ExtensionUrlProviders")]


		

										[PrimaryKey("ExtensionUrlProviderID")]
									
		
		[ExplicitColumns]
    public partial class am_ExtensionUrlProvider : afDB.Record<am_ExtensionUrlProvider>  
    {
		[Column] public int ExtensionUrlProviderID { get; set; }
		[Column] public string ProviderName { get; set; }
		[Column] public string ProviderType { get; set; }
		[Column] public string SettingsControlSrc { get; set; }
		[Column] public bool IsActive { get; set; }
		[Column] public bool RewriteAllUrls { get; set; }
		[Column] public bool RedirectAllUrls { get; set; }
		[Column] public bool ReplaceAllUrls { get; set; }
		[Column] public int? DesktopModuleId { get; set; }
	}

	[TableName("am_activeforums_Attachments")]


		

										[PrimaryKey("AttachID")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Attachment : afDB.Record<am_activeforums_Attachment>  
    {
		[Column] public int AttachID { get; set; }
		[Column] public int? ContentId { get; set; }
		[Column] public int? UserID { get; set; }
		[Column] public string Filename { get; set; }
		[Column] public DateTime? DateAdded { get; set; }
		[Column] public DateTime? DateUpdated { get; set; }
		[Column] public byte[] FileData { get; set; }
		[Column] public string ContentType { get; set; }
		[Column] public int? FileSize { get; set; }
		[Column] public bool AllowDownload { get; set; }
		[Column] public bool DisplayInline { get; set; }
		[Column] public int DownloadCount { get; set; }
		[Column] public int ParentAttachId { get; set; }
		[Column] public int? FileID { get; set; }
	}

	[TableName("am_ModuleDefinitions")]


		

										[PrimaryKey("ModuleDefID")]
									
		
		[ExplicitColumns]
    public partial class am_ModuleDefinition : afDB.Record<am_ModuleDefinition>  
    {
		[Column] public int ModuleDefID { get; set; }
		[Column] public string FriendlyName { get; set; }
		[Column] public int DesktopModuleID { get; set; }
		[Column] public int DefaultCacheTime { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public string DefinitionName { get; set; }
	}

	[TableName("am_UserDefinedData")]


	
		[PrimaryKey("UserDefinedFieldId,UserDefinedRowId")]

		
		[ExplicitColumns]
    public partial class am_UserDefinedDatum : afDB.Record<am_UserDefinedDatum>  
    {
		[Column] public int UserDefinedFieldId { get; set; }
		[Column] public int UserDefinedRowId { get; set; }
		[Column] public string FieldValue { get; set; }
	}

	[TableName("am_SynonymsGroups")]


		

										[PrimaryKey("SynonymsGroupID")]
									
		
		[ExplicitColumns]
    public partial class am_SynonymsGroup : afDB.Record<am_SynonymsGroup>  
    {
		[Column] public int SynonymsGroupID { get; set; }
		[Column] public string SynonymsTags { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public string CultureCode { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_ExtensionUrlProviderConfiguration")]


	
		[PrimaryKey("ExtensionUrlProviderID,PortalID")]

		
		[ExplicitColumns]
    public partial class am_ExtensionUrlProviderConfiguration : afDB.Record<am_ExtensionUrlProviderConfiguration>  
    {
		[Column] public int ExtensionUrlProviderID { get; set; }
		[Column] public int PortalID { get; set; }
	}

	[TableName("am_activeforums_AuditLog")]


		

										[PrimaryKey("AuditId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_AuditLog : afDB.Record<am_activeforums_AuditLog>  
    {
		[Column] public int AuditId { get; set; }
		[Column] public int RelatedId { get; set; }
		[Column] public int RelatedType { get; set; }
		[Column] public int UserId { get; set; }
		[Column] public int AuditAction { get; set; }
		[Column] public string UserAddress { get; set; }
		[Column] public string UserAgent { get; set; }
		[Column] public DateTime DateAdded { get; set; }
	}

	[TableName("am_UsersOnline")]


	
		[PrimaryKey("UserID,PortalID")]

		
		[ExplicitColumns]
    public partial class am_UsersOnline : afDB.Record<am_UsersOnline>  
    {
		[Column] public int UserID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public int TabID { get; set; }
		[Column] public DateTime CreationDate { get; set; }
		[Column] public DateTime LastActiveDate { get; set; }
	}

	[TableName("am_SearchCommonWords")]


		

										[PrimaryKey("CommonWordID")]
									
		
		[ExplicitColumns]
    public partial class am_SearchCommonWord : afDB.Record<am_SearchCommonWord>  
    {
		[Column] public int CommonWordID { get; set; }
		[Column] public string CommonWord { get; set; }
		[Column] public string Locale { get; set; }
	}

	[TableName("am_TabVersions")]


		

										[PrimaryKey("TabVersionId")]
									
		
		[ExplicitColumns]
    public partial class am_TabVersion : afDB.Record<am_TabVersion>  
    {
		[Column] public int TabVersionId { get; set; }
		[Column] public int TabId { get; set; }
		[Column] public int Version { get; set; }
		[Column] public DateTime TimeStamp { get; set; }
		[Column] public bool IsPublished { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_VendorClassification")]


		

										[PrimaryKey("VendorClassificationId")]
									
		
		[ExplicitColumns]
    public partial class am_VendorClassification : afDB.Record<am_VendorClassification>  
    {
		[Column] public int VendorClassificationId { get; set; }
		[Column] public int VendorId { get; set; }
		[Column] public int ClassificationId { get; set; }
	}

	[TableName("am_ExtensionUrlProviderSetting")]


	
		[PrimaryKey("ExtensionUrlProviderID,PortalID,SettingName")]

		
		[ExplicitColumns]
    public partial class am_ExtensionUrlProviderSetting : afDB.Record<am_ExtensionUrlProviderSetting>  
    {
		[Column] public int ExtensionUrlProviderID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
	}

	[TableName("am_reports_XsltExtensionObjects")]


		

										[PrimaryKey("ExtensionObjectId")]
									
		
		[ExplicitColumns]
    public partial class am_reports_XsltExtensionObject : afDB.Record<am_reports_XsltExtensionObject>  
    {
		[Column] public int ExtensionObjectId { get; set; }
		[Column] public int TabModuleId { get; set; }
		[Column] public string XmlNamespace { get; set; }
		[Column] public string ClrType { get; set; }
	}

	[TableName("am_AnonymousUsers")]


	
		[PrimaryKey("UserID,PortalID")]

		
		[ExplicitColumns]
    public partial class am_AnonymousUser : afDB.Record<am_AnonymousUser>  
    {
		[Column] public string UserID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public int TabID { get; set; }
		[Column] public DateTime CreationDate { get; set; }
		[Column] public DateTime LastActiveDate { get; set; }
	}

	[TableName("am_ExtensionUrlProviderTab")]


	
		[PrimaryKey("ExtensionUrlProviderID,PortalID,TabID")]

		
		[ExplicitColumns]
    public partial class am_ExtensionUrlProviderTab : afDB.Record<am_ExtensionUrlProviderTab>  
    {
		[Column] public int ExtensionUrlProviderID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public int TabID { get; set; }
		[Column] public bool IsActive { get; set; }
	}

	[TableName("am_activeforums_Content")]


		

										[PrimaryKey("ContentId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Content : afDB.Record<am_activeforums_Content>  
    {
		[Column] public int ContentId { get; set; }
		[Column] public string Subject { get; set; }
		[Column] public string Summary { get; set; }
		[Column] public string Body { get; set; }
		[Column] public DateTime DateCreated { get; set; }
		[Column] public DateTime DateUpdated { get; set; }
		[Column] public int AuthorId { get; set; }
		[Column] public string AuthorName { get; set; }
		[Column] public bool IsDeleted { get; set; }
		[Column] public string IPAddress { get; set; }
		[Column] public int? ContentItemId { get; set; }
	}

	[TableName("am_SearchStopWords")]


		

										[PrimaryKey("StopWordsID")]
									
		
		[ExplicitColumns]
    public partial class am_SearchStopWord : afDB.Record<am_SearchStopWord>  
    {
		[Column] public int StopWordsID { get; set; }
		[Column] public string StopWords { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public string CultureCode { get; set; }
	}

	[TableName("am_ProfilePropertyDefinition")]


		

										[PrimaryKey("PropertyDefinitionID")]
									
		
		[ExplicitColumns]
    public partial class am_ProfilePropertyDefinition : afDB.Record<am_ProfilePropertyDefinition>  
    {
		[Column] public int PropertyDefinitionID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public int? ModuleDefID { get; set; }
		[Column] public bool Deleted { get; set; }
		[Column] public int DataType { get; set; }
		[Column] public string DefaultValue { get; set; }
		[Column] public string PropertyCategory { get; set; }
		[Column] public string PropertyName { get; set; }
		[Column] public int Length { get; set; }
		[Column] public bool Required { get; set; }
		[Column] public string ValidationExpression { get; set; }
		[Column] public int ViewOrder { get; set; }
		[Column] public bool Visible { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public int? DefaultVisibility { get; set; }
		[Column] public bool ReadOnly { get; set; }
	}

	[TableName("am_TabAliasSkins")]


		

										[PrimaryKey("TabAliasSkinId")]
									
		
		[ExplicitColumns]
    public partial class am_TabAliasSkin : afDB.Record<am_TabAliasSkin>  
    {
		[Column] public int TabAliasSkinId { get; set; }
		[Column] public int TabId { get; set; }
		[Column] public int PortalAliasId { get; set; }
		[Column] public string SkinSrc { get; set; }
		[Column] public int? CreatedByUserId { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserId { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_TabVersionDetails")]


		

										[PrimaryKey("TabVersionDetailId")]
									
		
		[ExplicitColumns]
    public partial class am_TabVersionDetail : afDB.Record<am_TabVersionDetail>  
    {
		[Column] public int TabVersionDetailId { get; set; }
		[Column] public int TabVersionId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public int ModuleVersion { get; set; }
		[Column] public string PaneName { get; set; }
		[Column] public int ModuleOrder { get; set; }
		[Column] public int Action { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_UserProfile")]


		

										[PrimaryKey("ProfileID")]
									
		
		[ExplicitColumns]
    public partial class am_UserProfile : afDB.Record<am_UserProfile>  
    {
		[Column] public int ProfileID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public int PropertyDefinitionID { get; set; }
		[Column] public string PropertyValue { get; set; }
		[Column] public string PropertyText { get; set; }
		[Column] public int Visibility { get; set; }
		[Column] public DateTime LastUpdatedDate { get; set; }
		[Column] public string ExtendedVisibility { get; set; }
	}

	[TableName("am_TabUrls")]


	
		[PrimaryKey("TabId,SeqNum")]

		
		[ExplicitColumns]
    public partial class am_TabUrl : afDB.Record<am_TabUrl>  
    {
		[Column] public int TabId { get; set; }
		[Column] public int SeqNum { get; set; }
		[Column] public string Url { get; set; }
		[Column] public string QueryString { get; set; }
		[Column] public string HttpStatus { get; set; }
		[Column] public string CultureCode { get; set; }
		[Column] public bool IsSystem { get; set; }
		[Column] public int? PortalAliasId { get; set; }
		[Column] public int? PortalAliasUsage { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_Blog_BlogLocalization")]


	
		[PrimaryKey("BlogID,Locale")]

		
		[ExplicitColumns]
    public partial class am_Blog_BlogLocalization : afDB.Record<am_Blog_BlogLocalization>  
    {
		[Column] public int BlogID { get; set; }
		[Column] public string Locale { get; set; }
		[Column] public string Title { get; set; }
		[Column] public string Description { get; set; }
	}

	[TableName("am_Taxonomy_ScopeTypes")]


		

										[PrimaryKey("ScopeTypeID")]
									
		
		[ExplicitColumns]
    public partial class am_Taxonomy_ScopeType : afDB.Record<am_Taxonomy_ScopeType>  
    {
		[Column] public int ScopeTypeID { get; set; }
		[Column] public string ScopeType { get; set; }
	}

	[TableName("am_activeforums_Filters")]


		

										[PrimaryKey("FilterId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Filter : afDB.Record<am_activeforums_Filter>  
    {
		[Column] public int FilterId { get; set; }
		[Column] public string Find { get; set; }
		[Column] public string Replace { get; set; }
		[Column] public string FilterType { get; set; }
		[Column] public int? PortalId { get; set; }
		[Column] public int? ModuleId { get; set; }
	}

	[TableName("am_Blog_BlogPermissions")]


	
		[PrimaryKey("BlogId,PermissionId,RoleId,UserId")]

		
		[ExplicitColumns]
    public partial class am_Blog_BlogPermission : afDB.Record<am_Blog_BlogPermission>  
    {
		[Column] public bool? AllowAccess { get; set; }
		[Column] public int BlogId { get; set; }
		[Column] public DateTime? Expires { get; set; }
		[Column] public int PermissionId { get; set; }
		[Column] public int RoleId { get; set; }
		[Column] public int UserId { get; set; }
	}

	[TableName("am_Vendors")]


		

										[PrimaryKey("VendorId")]
									
		
		[ExplicitColumns]
    public partial class am_Vendor : afDB.Record<am_Vendor>  
    {
		[Column] public int VendorId { get; set; }
		[Column] public string VendorName { get; set; }
		[Column] public string Street { get; set; }
		[Column] public string City { get; set; }
		[Column] public string Region { get; set; }
		[Column] public string Country { get; set; }
		[Column] public string PostalCode { get; set; }
		[Column] public string Telephone { get; set; }
		[Column] public int? PortalId { get; set; }
		[Column] public string Fax { get; set; }
		[Column] public string Email { get; set; }
		[Column] public string Website { get; set; }
		[Column] public int ClickThroughs { get; set; }
		[Column] public int Views { get; set; }
		[Column] public string CreatedByUser { get; set; }
		[Column] public DateTime? CreatedDate { get; set; }
		[Column] public string LogoFile { get; set; }
		[Column] public string KeyWords { get; set; }
		[Column] public string Unit { get; set; }
		[Column] public bool Authorized { get; set; }
		[Column] public string FirstName { get; set; }
		[Column] public string LastName { get; set; }
		[Column] public string Cell { get; set; }
	}

	[TableName("am_Users")]


		

										[PrimaryKey("UserID")]
									
		
		[ExplicitColumns]
    public partial class am_User : afDB.Record<am_User>  
    {
		[Column] public int UserID { get; set; }
		[Column] public string Username { get; set; }
		[Column] public string FirstName { get; set; }
		[Column] public string LastName { get; set; }
		[Column] public bool IsSuperUser { get; set; }
		[Column] public int? AffiliateId { get; set; }
		[Column] public string Email { get; set; }
		[Column] public string DisplayName { get; set; }
		[Column] public bool UpdatePassword { get; set; }
		[Column] public string LastIPAddress { get; set; }
		[Column] public bool IsDeleted { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public Guid? PasswordResetToken { get; set; }
		[Column] public DateTime? PasswordResetExpiration { get; set; }
		[Column] public string LowerEmail { get; set; }
	}

	[TableName("am_activeforums_Forums")]


		

										[PrimaryKey("ForumId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Forum : afDB.Record<am_activeforums_Forum>  
    {
		[Column] public int ForumId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public int ForumGroupId { get; set; }
		[Column] public int ParentForumId { get; set; }
		[Column] public string ForumName { get; set; }
		[Column] public string ForumDesc { get; set; }
		[Column] public int SortOrder { get; set; }
		[Column] public bool Active { get; set; }
		[Column] public bool Hidden { get; set; }
		[Column] public int TotalTopics { get; set; }
		[Column] public int TotalReplies { get; set; }
		[Column] public int LastPostId { get; set; }
		[Column] public string ForumSettingsKey { get; set; }
		[Column] public string ForumSecurityKey { get; set; }
		[Column] public DateTime DateCreated { get; set; }
		[Column] public DateTime DateUpdated { get; set; }
		[Column] public int LastTopicId { get; set; }
		[Column] public int LastReplyId { get; set; }
		[Column] public string LastPostSubject { get; set; }
		[Column] public string LastPostAuthorName { get; set; }
		[Column] public int LastPostAuthorId { get; set; }
		[Column] public DateTime? LastPostDate { get; set; }
		[Column] public int PermissionsId { get; set; }
		[Column] public string PrefixURL { get; set; }
		[Column] public int SocialGroupId { get; set; }
		[Column] public bool HasProperties { get; set; }
	}

	[TableName("am_Blog_Blogs")]


		

										[PrimaryKey("BlogID")]
									
		
		[ExplicitColumns]
    public partial class am_Blog_Blog : afDB.Record<am_Blog_Blog>  
    {
		[Column] public int BlogID { get; set; }
		[Column] public int ModuleID { get; set; }
		[Column] public string Title { get; set; }
		[Column] public string Description { get; set; }
		[Column] public string Image { get; set; }
		[Column] public string Locale { get; set; }
		[Column] public bool? FullLocalization { get; set; }
		[Column] public bool Published { get; set; }
		[Column] public bool IncludeImagesInFeed { get; set; }
		[Column] public bool IncludeAuthorInFeed { get; set; }
		[Column] public bool Syndicated { get; set; }
		[Column] public string SyndicationEmail { get; set; }
		[Column] public string Copyright { get; set; }
		[Column] public bool MustApproveGhostPosts { get; set; }
		[Column] public bool PublishAsOwner { get; set; }
		[Column] public bool? EnablePingBackSend { get; set; }
		[Column] public bool? EnablePingBackReceive { get; set; }
		[Column] public bool? AutoApprovePingBack { get; set; }
		[Column] public bool? EnableTrackBackSend { get; set; }
		[Column] public bool? EnableTrackBackReceive { get; set; }
		[Column] public bool? AutoApproveTrackBack { get; set; }
		[Column] public int OwnerUserId { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_Blog_CommentKarmas")]


	
		[PrimaryKey("CommentId,UserId,Karma")]

		
		[ExplicitColumns]
    public partial class am_Blog_CommentKarma : afDB.Record<am_Blog_CommentKarma>  
    {
		[Column] public int CommentId { get; set; }
		[Column] public int UserId { get; set; }
		[Column] public int Karma { get; set; }
		[Column] public DateTime Datime { get; set; }
	}

	[TableName("am_Blog_Comments")]


		

										[PrimaryKey("CommentID")]
									
		
		[ExplicitColumns]
    public partial class am_Blog_Comment : afDB.Record<am_Blog_Comment>  
    {
		[Column] public int CommentID { get; set; }
		[Column] public int ContentItemId { get; set; }
		[Column] public int? ParentId { get; set; }
		[Column] public string Comment { get; set; }
		[Column] public bool? Approved { get; set; }
		[Column] public string Author { get; set; }
		[Column] public string Website { get; set; }
		[Column] public string Email { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_UserRoles")]


		

										[PrimaryKey("UserRoleID")]
									
		
		[ExplicitColumns]
    public partial class am_UserRole : afDB.Record<am_UserRole>  
    {
		[Column] public int UserRoleID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public int RoleID { get; set; }
		[Column] public DateTime? ExpiryDate { get; set; }
		[Column] public bool? IsTrialUsed { get; set; }
		[Column] public DateTime? EffectiveDate { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public int Status { get; set; }
		[Column] public bool IsOwner { get; set; }
	}

	[TableName("am_Blog_LegacyUrls")]


		

										[PrimaryKey("Url", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class am_Blog_LegacyUrl : afDB.Record<am_Blog_LegacyUrl>  
    {
		[Column] public string Url { get; set; }
		[Column] public int? EntryId { get; set; }
		[Column] public int ContentItemId { get; set; }
	}

	[TableName("am_HostSettings")]


		

										[PrimaryKey("SettingName", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class am_HostSetting : afDB.Record<am_HostSetting>  
    {
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
		[Column] public bool SettingIsSecure { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_Blog_PostLocalization")]


	
		[PrimaryKey("ContentItemId,Locale")]

		
		[ExplicitColumns]
    public partial class am_Blog_PostLocalization : afDB.Record<am_Blog_PostLocalization>  
    {
		[Column] public int ContentItemId { get; set; }
		[Column] public string Locale { get; set; }
		[Column] public string Title { get; set; }
		[Column] public string Summary { get; set; }
		[Column] public int? LocalizedContentItemId { get; set; }
	}

	[TableName("am_activeforums_Permissions")]


		

										[PrimaryKey("PermissionsId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Permission : afDB.Record<am_activeforums_Permission>  
    {
		[Column] public int PermissionsId { get; set; }
		[Column] public string CanView { get; set; }
		[Column] public string CanRead { get; set; }
		[Column] public string CanCreate { get; set; }
		[Column] public string CanReply { get; set; }
		[Column] public string CanEdit { get; set; }
		[Column] public string CanDelete { get; set; }
		[Column] public string CanLock { get; set; }
		[Column] public string CanPin { get; set; }
		[Column] public string CanAttach { get; set; }
		[Column] public string CanPoll { get; set; }
		[Column] public string CanBlock { get; set; }
		[Column] public string CanTrust { get; set; }
		[Column] public string CanSubscribe { get; set; }
		[Column] public string CanAnnounce { get; set; }
		[Column] public string CanModApprove { get; set; }
		[Column] public string CanModMove { get; set; }
		[Column] public string CanModSplit { get; set; }
		[Column] public string CanModDelete { get; set; }
		[Column] public string CanModUser { get; set; }
		[Column] public string CanModEdit { get; set; }
		[Column] public string CanModLock { get; set; }
		[Column] public string CanModPin { get; set; }
		[Column] public string CanTag { get; set; }
		[Column] public string CanCategorize { get; set; }
		[Column] public string CanPrioritize { get; set; }
	}

	[TableName("am_UserPortals")]


	
		[PrimaryKey("UserId,PortalId")]

		
		[ExplicitColumns]
    public partial class am_UserPortal : afDB.Record<am_UserPortal>  
    {
		[Column] public int UserId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int UserPortalId { get; set; }
		[Column] public DateTime CreatedDate { get; set; }
		[Column] public bool Authorised { get; set; }
		[Column] public bool IsDeleted { get; set; }
		[Column] public bool RefreshRoles { get; set; }
		[Column] public string VanityUrl { get; set; }
	}

	[TableName("am_PasswordHistory")]


		

										[PrimaryKey("PasswordHistoryID")]
									
		
		[ExplicitColumns]
    public partial class am_PasswordHistory : afDB.Record<am_PasswordHistory>  
    {
		[Column] public int PasswordHistoryID { get; set; }
		[Column] public int UserID { get; set; }
		[Column] public string Password { get; set; }
		[Column] public string PasswordSalt { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_Blog_Posts")]


		

										[PrimaryKey("ContentItemId", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class am_Blog_Post : afDB.Record<am_Blog_Post>  
    {
		[Column] public int ContentItemId { get; set; }
		[Column] public int BlogID { get; set; }
		[Column] public string Title { get; set; }
		[Column] public string Summary { get; set; }
		[Column] public string Image { get; set; }
		[Column] public bool Published { get; set; }
		[Column] public DateTime PublishedOnDate { get; set; }
		[Column] public bool? AllowComments { get; set; }
		[Column] public bool DisplayCopyright { get; set; }
		[Column] public string Copyright { get; set; }
		[Column] public string Locale { get; set; }
		[Column] public int? ViewCount { get; set; }
	}

	[TableName("am_EventQueue")]


		

										[PrimaryKey("EventMessageID")]
									
		
		[ExplicitColumns]
    public partial class am_EventQueue : afDB.Record<am_EventQueue>  
    {
		[Column] public int EventMessageID { get; set; }
		[Column] public string EventName { get; set; }
		[Column] public int Priority { get; set; }
		[Column] public string ProcessorType { get; set; }
		[Column] public string ProcessorCommand { get; set; }
		[Column] public string Body { get; set; }
		[Column] public string Sender { get; set; }
		[Column] public string Subscriber { get; set; }
		[Column] public string AuthorizedRoles { get; set; }
		[Column] public string ExceptionMessage { get; set; }
		[Column] public DateTime SentDate { get; set; }
		[Column] public DateTime ExpirationDate { get; set; }
		[Column] public string Attributes { get; set; }
		[Column] public bool IsComplete { get; set; }
	}

	[TableName("am_activeforums_Forums_Tracking")]


		

										[PrimaryKey("TrackingId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Forums_Tracking : afDB.Record<am_activeforums_Forums_Tracking>  
    {
		[Column] public int TrackingId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public int UserId { get; set; }
		[Column] public int ForumId { get; set; }
		[Column] public DateTime LastAccessDate { get; set; }
		[Column] public int MaxTopicRead { get; set; }
		[Column] public int MaxReplyRead { get; set; }
	}

	[TableName("am_Blog_TermLocalization")]


	
		[PrimaryKey("TermID,Locale")]

		
		[ExplicitColumns]
    public partial class am_Blog_TermLocalization : afDB.Record<am_Blog_TermLocalization>  
    {
		[Column] public int TermID { get; set; }
		[Column] public string Locale { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string Description { get; set; }
	}

	[TableName("am_Blog_Terms")]


		

										[PrimaryKey("TermID", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class am_Blog_Term : afDB.Record<am_Blog_Term>  
    {
		[Column] public int TermID { get; set; }
		[Column] public int ViewOrder { get; set; }
	}

	[TableName("am_PackageTypes")]


		

										[PrimaryKey("PackageType", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class am_PackageType : afDB.Record<am_PackageType>  
    {
		[Column] public string PackageType { get; set; }
		[Column] public string Description { get; set; }
		[Column] public int SecurityAccessLevel { get; set; }
		[Column] public string EditorControlSrc { get; set; }
		[Column] public bool SupportsSideBySideInstallation { get; set; }
	}

	[TableName("am_RelationshipTypes")]


		

										[PrimaryKey("RelationshipTypeID")]
									
		
		[ExplicitColumns]
    public partial class am_RelationshipType : afDB.Record<am_RelationshipType>  
    {
		[Column] public int RelationshipTypeID { get; set; }
		[Column] public int Direction { get; set; }
		[Column] public string Name { get; set; }
		[Column] public string Description { get; set; }
		[Column] public int CreatedByUserID { get; set; }
		[Column] public DateTime CreatedOnDate { get; set; }
		[Column] public int LastModifiedByUserID { get; set; }
		[Column] public DateTime LastModifiedOnDate { get; set; }
	}

	[TableName("am_Roles")]


		

										[PrimaryKey("RoleID")]
									
		
		[ExplicitColumns]
    public partial class am_Role : afDB.Record<am_Role>  
    {
		[Column] public int RoleID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string RoleName { get; set; }
		[Column] public string Description { get; set; }
		[Column] public decimal? ServiceFee { get; set; }
		[Column] public string BillingFrequency { get; set; }
		[Column] public int? TrialPeriod { get; set; }
		[Column] public string TrialFrequency { get; set; }
		[Column] public int? BillingPeriod { get; set; }
		[Column] public decimal? TrialFee { get; set; }
		[Column] public bool IsPublic { get; set; }
		[Column] public bool AutoAssignment { get; set; }
		[Column] public int? RoleGroupID { get; set; }
		[Column] public string RSVPCode { get; set; }
		[Column] public string IconFile { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public int Status { get; set; }
		[Column] public int SecurityMode { get; set; }
		[Column] public bool IsSystemRole { get; set; }
	}

	[TableName("am_activeforums_ForumTopics")]


	
		[PrimaryKey("ForumId,TopicId")]

		
		[ExplicitColumns]
    public partial class am_activeforums_ForumTopic : afDB.Record<am_activeforums_ForumTopic>  
    {
		[Column] public int ForumId { get; set; }
		[Column] public int TopicId { get; set; }
		[Column] public int? LastReplyId { get; set; }
		[Column] public DateTime? LastPostDate { get; set; }
		[Column] public string LastPostData { get; set; }
		[Column] public int? LastTopicDate { get; set; }
		[Column] public int? LastReplyDate { get; set; }
	}

	[TableName("am_PortalGroups")]


		

										[PrimaryKey("PortalGroupID")]
									
		
		[ExplicitColumns]
    public partial class am_PortalGroup : afDB.Record<am_PortalGroup>  
    {
		[Column] public int PortalGroupID { get; set; }
		[Column] public int? MasterPortalID { get; set; }
		[Column] public string PortalGroupName { get; set; }
		[Column] public string PortalGroupDescription { get; set; }
		[Column] public string AuthenticationDomain { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_activeforums_Groups")]


		

										[PrimaryKey("ForumGroupId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Group : afDB.Record<am_activeforums_Group>  
    {
		[Column] public int ForumGroupId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public string GroupName { get; set; }
		[Column] public int SortOrder { get; set; }
		[Column] public bool Active { get; set; }
		[Column] public bool Hidden { get; set; }
		[Column] public string GroupSettingsKey { get; set; }
		[Column] public string GroupSecurityKey { get; set; }
		[Column] public int PermissionsId { get; set; }
		[Column] public string PrefixURL { get; set; }
	}

	[TableName("am_IPFilter")]


		

										[PrimaryKey("IPFilterID")]
									
		
		[ExplicitColumns]
    public partial class am_IPFilter : afDB.Record<am_IPFilter>  
    {
		[Column] public int IPFilterID { get; set; }
		[Column] public string IPAddress { get; set; }
		[Column] public string SubnetMask { get; set; }
		[Column] public byte? RuleType { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_Folders")]


		

										[PrimaryKey("FolderID")]
									
		
		[ExplicitColumns]
    public partial class am_Folder : afDB.Record<am_Folder>  
    {
		[Column] public int FolderID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string FolderPath { get; set; }
		[Column] public int StorageLocation { get; set; }
		[Column] public bool IsProtected { get; set; }
		[Column] public bool IsCached { get; set; }
		[Column] public DateTime? LastUpdated { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public Guid UniqueId { get; set; }
		[Column] public Guid VersionGuid { get; set; }
		[Column] public int FolderMappingID { get; set; }
		[Column] public int? ParentID { get; set; }
		[Column] public bool IsVersioned { get; set; }
		[Column] public int? WorkflowID { get; set; }
		[Column] public string MappedPath { get; set; }
	}

	[TableName("am_activeforums_Poll")]


		

										[PrimaryKey("PollID")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Poll : afDB.Record<am_activeforums_Poll>  
    {
		[Column] public int PollID { get; set; }
		[Column] public int? TopicId { get; set; }
		[Column] public int? UserId { get; set; }
		[Column] public string Question { get; set; }
		[Column] public string PollType { get; set; }
		[Column] public DateTime? DateAdded { get; set; }
		[Column] public DateTime? DateUpdated { get; set; }
	}

	[TableName("aspnet_Applications")]


		

										[PrimaryKey("ApplicationId", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class aspnet_Application : afDB.Record<aspnet_Application>  
    {
		[Column] public string ApplicationName { get; set; }
		[Column] public string LoweredApplicationName { get; set; }
		[Column] public Guid ApplicationId { get; set; }
		[Column] public string Description { get; set; }
	}

	[TableName("am_ScheduleItemSettings")]


	
		[PrimaryKey("ScheduleID,SettingName")]

		
		[ExplicitColumns]
    public partial class am_ScheduleItemSetting : afDB.Record<am_ScheduleItemSetting>  
    {
		[Column] public int ScheduleID { get; set; }
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
	}

	[TableName("am_activeforums_Poll_Options")]


		

										[PrimaryKey("PollOptionsID")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Poll_Option : afDB.Record<am_activeforums_Poll_Option>  
    {
		[Column] public int PollOptionsID { get; set; }
		[Column] public int? PollID { get; set; }
		[Column] public string OptionName { get; set; }
		[Column] public DateTime? DateAdded { get; set; }
		[Column] public DateTime? DateUpdated { get; set; }
	}

	[TableName("am_ContentWorkflowActions")]


		

										[PrimaryKey("ActionId")]
									
		
		[ExplicitColumns]
    public partial class am_ContentWorkflowAction : afDB.Record<am_ContentWorkflowAction>  
    {
		[Column] public int ActionId { get; set; }
		[Column] public int ContentTypeId { get; set; }
		[Column] public string ActionType { get; set; }
		[Column] public string ActionSource { get; set; }
	}

	[TableName("am_RoleGroups")]


		

										[PrimaryKey("RoleGroupID")]
									
		
		[ExplicitColumns]
    public partial class am_RoleGroup : afDB.Record<am_RoleGroup>  
    {
		[Column] public int RoleGroupID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public string RoleGroupName { get; set; }
		[Column] public string Description { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_JavaScriptLibraries")]


		

										[PrimaryKey("JavaScriptLibraryID")]
									
		
		[ExplicitColumns]
    public partial class am_JavaScriptLibrary : afDB.Record<am_JavaScriptLibrary>  
    {
		[Column] public int JavaScriptLibraryID { get; set; }
		[Column] public int PackageID { get; set; }
		[Column] public string LibraryName { get; set; }
		[Column] public string Version { get; set; }
		[Column] public string FileName { get; set; }
		[Column] public string ObjectName { get; set; }
		[Column] public int PreferredScriptLocation { get; set; }
		[Column] public string CDNPath { get; set; }
	}

	[TableName("am_activeforums_Poll_Results")]


		

										[PrimaryKey("PollResultsID")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Poll_Result : afDB.Record<am_activeforums_Poll_Result>  
    {
		[Column] public int PollResultsID { get; set; }
		[Column] public int? PollID { get; set; }
		[Column] public int? PollOptionID { get; set; }
		[Column] public string Response { get; set; }
		[Column] public string IPAddress { get; set; }
		[Column] public int? UserID { get; set; }
		[Column] public DateTime? DateAdded { get; set; }
		[Column] public DateTime? DateUpdated { get; set; }
	}

	[TableName("am_Urls")]


		

										[PrimaryKey("UrlID")]
									
		
		[ExplicitColumns]
    public partial class am_Url : afDB.Record<am_Url>  
    {
		[Column] public int UrlID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string Url { get; set; }
	}

	[TableName("aspnet_Users")]


		

										[PrimaryKey("UserId", autoIncrement=false)]
			
		
		[ExplicitColumns]
    public partial class aspnet_User : afDB.Record<aspnet_User>  
    {
		[Column] public Guid ApplicationId { get; set; }
		[Column] public Guid UserId { get; set; }
		[Column] public string UserName { get; set; }
		[Column] public string LoweredUserName { get; set; }
		[Column] public string MobileAlias { get; set; }
		[Column] public bool IsAnonymous { get; set; }
		[Column] public DateTime LastActivityDate { get; set; }
	}

	[TableName("am_FileVersions")]


	
		[PrimaryKey("FileId,Version")]

		
		[ExplicitColumns]
    public partial class am_FileVersion : afDB.Record<am_FileVersion>  
    {
		[Column] public int FileId { get; set; }
		[Column] public int Version { get; set; }
		[Column] public string FileName { get; set; }
		[Column] public string Extension { get; set; }
		[Column] public int Size { get; set; }
		[Column] public int? Width { get; set; }
		[Column] public int? Height { get; set; }
		[Column] public string ContentType { get; set; }
		[Column] public byte[] Content { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public string SHA1Hash { get; set; }
	}

	[TableName("am_Taxonomy_VocabularyTypes")]


		

										[PrimaryKey("VocabularyTypeID")]
									
		
		[ExplicitColumns]
    public partial class am_Taxonomy_VocabularyType : afDB.Record<am_Taxonomy_VocabularyType>  
    {
		[Column] public int VocabularyTypeID { get; set; }
		[Column] public string VocabularyType { get; set; }
	}

	[TableName("am_UrlTracking")]


		

										[PrimaryKey("UrlTrackingID")]
									
		
		[ExplicitColumns]
    public partial class am_UrlTracking : afDB.Record<am_UrlTracking>  
    {
		[Column] public int UrlTrackingID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string Url { get; set; }
		[Column] public string UrlType { get; set; }
		[Column] public int Clicks { get; set; }
		[Column] public DateTime? LastClick { get; set; }
		[Column] public DateTime CreatedDate { get; set; }
		[Column] public bool LogActivity { get; set; }
		[Column] public bool TrackClicks { get; set; }
		[Column] public int? ModuleId { get; set; }
		[Column] public bool NewWindow { get; set; }
	}

	[TableName("am_activeforums_Ranks")]


		

										[PrimaryKey("RankId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Rank : afDB.Record<am_activeforums_Rank>  
    {
		[Column] public int RankId { get; set; }
		[Column] public int PortalId { get; set; }
		[Column] public int ModuleId { get; set; }
		[Column] public string RankName { get; set; }
		[Column] public int? MinPosts { get; set; }
		[Column] public int? MaxPosts { get; set; }
		[Column] public string Display { get; set; }
	}

	[TableName("am_TabPermission")]


		

										[PrimaryKey("TabPermissionID")]
									
		
		[ExplicitColumns]
    public partial class am_TabPermission : afDB.Record<am_TabPermission>  
    {
		[Column] public int TabPermissionID { get; set; }
		[Column] public int TabID { get; set; }
		[Column] public int PermissionID { get; set; }
		[Column] public bool AllowAccess { get; set; }
		[Column] public int? RoleID { get; set; }
		[Column] public int? UserID { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_PackageDependencies")]


		

										[PrimaryKey("PackageDependencyID")]
									
		
		[ExplicitColumns]
    public partial class am_PackageDependency : afDB.Record<am_PackageDependency>  
    {
		[Column] public int PackageDependencyID { get; set; }
		[Column] public int PackageID { get; set; }
		[Column] public string PackageName { get; set; }
		[Column] public string Version { get; set; }
	}

	[TableName("am_activeforums_Replies")]


		

										[PrimaryKey("ReplyId")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_Reply : afDB.Record<am_activeforums_Reply>  
    {
		[Column] public int ReplyId { get; set; }
		[Column] public int TopicId { get; set; }
		[Column] public int? ReplyToId { get; set; }
		[Column] public int ContentId { get; set; }
		[Column] public bool IsApproved { get; set; }
		[Column] public bool IsRejected { get; set; }
		[Column] public int StatusId { get; set; }
		[Column] public bool IsDeleted { get; set; }
	}

	[TableName("am_activeforums_SearchCache")]


		

										[PrimaryKey("id")]
									
		
		[ExplicitColumns]
    public partial class am_activeforums_SearchCache : afDB.Record<am_activeforums_SearchCache>  
    {
		[Column] public int id { get; set; }
		[Column] public string searchResults { get; set; }
		[Column] public DateTime created { get; set; }
		[Column] public int duration { get; set; }
		[Column] public int userId { get; set; }
		[Column] public string context { get; set; }
	}

	[TableName("aspnet_SchemaVersions")]


	
		[PrimaryKey("Feature,CompatibleSchemaVersion")]

		
		[ExplicitColumns]
    public partial class aspnet_SchemaVersion : afDB.Record<aspnet_SchemaVersion>  
    {
		[Column] public string Feature { get; set; }
		[Column] public string CompatibleSchemaVersion { get; set; }
		[Column] public bool IsCurrentVersion { get; set; }
	}

	[TableName("am_FolderMappings")]


		

										[PrimaryKey("FolderMappingID")]
									
		
		[ExplicitColumns]
    public partial class am_FolderMapping : afDB.Record<am_FolderMapping>  
    {
		[Column] public int FolderMappingID { get; set; }
		[Column] public int? PortalID { get; set; }
		[Column] public string MappingName { get; set; }
		[Column] public string FolderProviderType { get; set; }
		[Column] public int? Priority { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
	}

	[TableName("am_Files")]


		

										[PrimaryKey("FileId")]
									
		
		[ExplicitColumns]
    public partial class am_File : afDB.Record<am_File>  
    {
		[Column] public int FileId { get; set; }
		[Column] public int? PortalId { get; set; }
		[Column] public string FileName { get; set; }
		[Column] public string Extension { get; set; }
		[Column] public int Size { get; set; }
		[Column] public int? Width { get; set; }
		[Column] public int? Height { get; set; }
		[Column] public string ContentType { get; set; }
		[Column] public int FolderID { get; set; }
		[Column] public byte[] Content { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public Guid UniqueId { get; set; }
		[Column] public Guid VersionGuid { get; set; }
		[Column] public string SHA1Hash { get; set; }
		[Column] public DateTime LastModificationTime { get; set; }
		[Column] public string Folder { get; set; }
		[Column] public string Title { get; set; }
		[Column] public DateTime StartDate { get; set; }
		[Column] public bool EnablePublishPeriod { get; set; }
		[Column] public DateTime? EndDate { get; set; }
		[Column] public int PublishedVersion { get; set; }
		[Column] public int? ContentItemID { get; set; }
	}

	[TableName("am_PortalSettings")]


		

										[PrimaryKey("PortalSettingID")]
									
		
		[ExplicitColumns]
    public partial class am_PortalSetting : afDB.Record<am_PortalSetting>  
    {
		[Column] public int PortalSettingID { get; set; }
		[Column] public int PortalID { get; set; }
		[Column] public string SettingName { get; set; }
		[Column] public string SettingValue { get; set; }
		[Column] public int? CreatedByUserID { get; set; }
		[Column] public DateTime? CreatedOnDate { get; set; }
		[Column] public int? LastModifiedByUserID { get; set; }
		[Column] public DateTime? LastModifiedOnDate { get; set; }
		[Column] public string CultureCode { get; set; }
	}
}



